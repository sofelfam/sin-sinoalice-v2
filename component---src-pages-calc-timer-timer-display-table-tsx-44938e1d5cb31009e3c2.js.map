{"version":3,"sources":["webpack:///./src/pages/calc/timer/timerDisplay-table.tsx"],"names":["classes","timerDisplayTable","timerTextLabel4","timerTextLabel2","timerDataLabel","zoomTimerTextLabel4WithIcon","zoomTimerTextLabel2WithIcon","zoomTimerDataLabelWithIcon","zoomTimerTextLabel4","zoomTimerDataLabel","TimerDataLabel","props","css","TimerTextLabel2","TimerTextLabel4","TimerTable","zoom","coloCountText","coloMareId","coloMareStartTime","coloMareEndTime","imageId","data-id","filename","MareTimerTable","readyCountText","mareCountText","ShinmaTimerTable","shinmaCountText","shinmaEndTime","useState","setZoom","useEffect","localStorage","type","id","onChange","e","handleZoomButton","htmlFor","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d"],"mappings":"kKAKMA,EAAU,CACdC,kBAAqB,uHAGrBC,gBAAmB,qYAGnBC,gBAAmB,qYAGnBC,eAAkB,sfAGlBC,4BAA6B,CAAF,qFAG3BC,4BAA6B,CAAF,mFAG3BC,2BAA4B,CAAF,gEAG1BC,oBAAqB,CAAF,kEAGnBC,mBAAoB,CAAF,kEAKdC,EAA2B,SAACC,GAChC,OAAO,+BAAKC,IAAKZ,EAAQI,gBAAlB,GAA8CO,EAArD,WAGIE,EAA4B,SAACF,GACjC,OAAO,+BAAKC,IAAKZ,EAAQG,iBAAlB,GAA+CQ,EAAtD,WAGIG,EAA4B,SAACH,GACjC,OAAO,+BAAKC,IAAKZ,EAAQE,iBAAlB,GAA+CS,EAAtD,W,40BAWII,EAAa,UAAW,YAA4B,IAChDC,EAAwEL,EADxB,KAC1CM,EAAkEN,EADxB,cAC3BO,EAAmDP,EADxB,WACfQ,EAAuCR,EADxB,kBACIS,EAAoBT,EADxB,gBAElDU,GAAW,GAAD,aAAgC,OAAD,UAA/B,GAAhB,EAEA,OACE,mBAAKT,IAAKZ,EAAQC,mBAChB,yBADF,aAEE,0BACE,0BACE,gCAAW,iBAAX,MAFJ,SAIE,0BACE,0BACE,eAAiBW,IAAKI,GAAQhB,EAAQK,6BADxC,QAEE,eAAgBO,IAAKI,GAAQhB,EAAQO,4BAHzC,IAKE,0BACE,0BACE,mBAAKe,UAASJ,IACd,iBAAUK,SAAQ,0BAEpB,uBACE,0BACE,eAAiBX,IAAKI,GAAQhB,EAAQM,6BADxC,MAEE,eAAgBM,IAAKI,GAAQhB,EAAQO,4BAHzC,IAKE,0BACE,eAAiBK,IAAKI,GAAQhB,EAAQM,6BADxC,MAEE,eAAgBM,IAAKI,GAAQhB,EAAQO,4BAxBnD,Y,yoBAwCIiB,EAAiB,UAAW,YAAgC,IACxDR,EAAwCL,EADgB,KAClDc,EAAkCd,EADgB,eAClCe,EAAkBf,EADgB,cAGhE,OACE,mBAAKC,IAAKZ,EAAQC,mBAChB,yBADF,UAEE,0BACE,0BACE,6BAAQ,iBAAR,MAFJ,SAIE,0BACE,0BACE,eAAiBW,IAAKI,GAAQhB,EAAQQ,qBADxC,QAEE,eAAgBI,IAAKI,GAAQhB,EAAQS,oBAHzC,IAKE,0BACE,eAAiBG,IAAKI,GAAQhB,EAAQQ,qBADxC,QAEE,eAAgBI,IAAKI,GAAQhB,EAAQS,oBAd/C,U,yoBA4BIkB,EAAmB,UAAW,YAAkC,IAC5DX,EAAyCL,EADmB,KACtDiB,EAAmCjB,EADmB,gBACrCkB,EAAkBlB,EADmB,cAGpE,OACE,mBAAKC,IAAKZ,EAAQC,mBAChB,yBADF,UAEE,0BACE,0BACE,6BAAQ,iBAAR,MAFJ,SAIE,0BACE,0BACE,eAAiBW,IAAKI,GAAQhB,EAAQQ,qBADxC,QAEE,eAAgBI,IAAKI,GAAQhB,EAAQS,oBAHzC,IAKE,0BACE,eAAiBG,IAAKI,GAAQhB,EAAQQ,qBADxC,QAEE,eAAgBI,IAAKI,GAAQhB,EAAQS,oBAd/C,U,k4BAiGF,UAhE0B,SAACE,GAAkC,IACnDM,EAAiIN,EAD9E,cACpCQ,EAAkHR,EAD9E,kBACjBS,EAA+FT,EAD9E,gBACAO,EAA8EP,EAD9E,WACYc,EAAkEd,EAD9E,eAC4Be,EAAkDf,EAD9E,cAC2CiB,EAAmCjB,EAD9E,gBAC4DkB,EAAkBlB,EAD9E,gBAEnCmB,oBAFmC,GAEpDd,EAFoD,KAE9Ce,EAF8C,KAI3DC,qBAAU,WACRD,SAAQE,qCADVD,IAcA,OACE,0BACE,0BACE,qBACEE,KADF,WAEEC,GAFF,mBAIEC,SAAU,mBAjBO,SAACC,GACpBA,SAAJ,SACEJ,uCACAF,QAEAE,wCACAF,OAWqBO,CAAP,MAEZ,qBACEC,QADF,oBAIGvB,EAEC,yBAAkBwB,MAAlB,6BAAqDC,KAArD,OAAiEC,QAAjE,YAAqFC,OAAO,gBAC1F,oBAAMC,cAAN,QAA4BC,eAA5B,QAAmDC,YAAnD,EAAmEC,EAAE,yDAGvE,yBAAkBP,MAAlB,6BAAqDC,KAArD,OAAiEC,QAAjE,YAAqFC,OAAO,gBAC1F,oBAAMC,cAAN,QAA4BC,eAA5B,QAAmDC,YAAnD,EAAmEC,EAAE,6EAK7E,eACE/B,KADF,EAEEC,cAFF,EAGEE,kBAHF,EAIEC,gBAJF,EAKEF,WAAYA,IAEd,eACEF,KADF,EAEES,eAFF,EAGEC,cAAeA,IAEjB,eACEV,KADF,EAEEY,gBAFF,EAGEC,cAAeA","file":"component---src-pages-calc-timer-timer-display-table-tsx-44938e1d5cb31009e3c2.js","sourcesContent":["import { css } from \"@emotion/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { AnyImage } from \"src/components\";\nimport tw from 'twin.macro';\n\nconst classes = {\n  timerDisplayTable: tw`\n    flex flex-col sm:w-1/3 w-full p-2\n  `,\n  timerTextLabel4: tw`\n    w-36 m-1 text-center font-bold border-b border-gray-400 transition ease-out\n  `,\n  timerTextLabel2: tw`\n    w-16 m-1 text-center font-bold border-b border-gray-400 transition ease-out\n  `,\n  timerDataLabel: tw`\n    w-40 m-1 text-center font-mono font-bold border-b border-gray-400 transition ease-out\n  `,\n  zoomTimerTextLabel4WithIcon: css`\n    transform: scale(0.4) translateY(-3.6rem) translateX(6.7rem);\n  `,\n  zoomTimerTextLabel2WithIcon: css`\n    transform: scale(0.4) translateY(-3.6rem) translateX(-2rem);\n  `,\n  zoomTimerDataLabelWithIcon: css`\n    transform: scale(1.3) translateX(-2rem);\n  `,\n  zoomTimerTextLabel4: css`\n    transform: scale(0.4) translateY(-3.6rem);\n  `,\n  zoomTimerDataLabel: css`\n    transform: scale(1.3) translateX(-4rem);\n  `\n};\n\nconst TimerDataLabel: React.FC = (props) => {\n  return <div css={classes.timerDataLabel} {...props}>{props.children}</div>;\n}\n\nconst TimerTextLabel2: React.FC = (props) => {\n  return <div css={classes.timerTextLabel2} {...props}>{props.children}</div>;\n}\n\nconst TimerTextLabel4: React.FC = (props) => {\n  return <div css={classes.timerTextLabel4} {...props}>{props.children}</div>;\n}\n\ninterface timerTableProps {\n  zoom: boolean;\n  coloCountText: string;\n  coloMareId: string;\n  coloMareStartTime: string;\n  coloMareEndTime: string;\n};\n\nconst TimerTable = React.memo((props: timerTableProps) => {\n  const { zoom, coloCountText, coloMareId, coloMareStartTime, coloMareEndTime } = props;\n  const imageId = ('' + coloMareId).length < 5 ? ('0000' + coloMareId).slice(-4) : coloMareId;\n\n  return(\n    <div css={classes.timerDisplayTable}>\n      <h6 tw='sm:block hidden dark:text-white'>コロシアム残り時間</h6>\n      <div tw='flex-grow flex items-center sm:items-start w-max mx-auto text-3xl'>\n        <div tw='w-36 mr-4 text-center block sm:hidden'>\n          <span>コロシアム<br />残り時間</span>\n        </div>\n        <div tw='flex flex-col'>\n          <div tw='flex flex-row'>\n            <TimerTextLabel4 css={zoom && classes.zoomTimerTextLabel4WithIcon}>全体時間</TimerTextLabel4>            \n            <TimerDataLabel css={zoom && classes.zoomTimerDataLabelWithIcon}>{coloCountText}</TimerDataLabel>\n          </div>\n          <div tw='flex'>\n            <div tw='w-20 h-20 my-1'>\n              <div data-id={coloMareId} />\n              <AnyImage filename={`cards/CardS${imageId}.png`} />\n            </div>\n            <div>\n              <div tw='flex' >\n                <TimerTextLabel2 css={zoom && classes.zoomTimerTextLabel2WithIcon}>発動</TimerTextLabel2>\n                <TimerDataLabel css={zoom && classes.zoomTimerDataLabelWithIcon}>{coloMareStartTime}</TimerDataLabel>\n              </div>\n              <div tw='flex'>\n                <TimerTextLabel2 css={zoom && classes.zoomTimerTextLabel2WithIcon}>終了</TimerTextLabel2>\n                <TimerDataLabel css={zoom && classes.zoomTimerDataLabelWithIcon}>{coloMareEndTime}</TimerDataLabel>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\ninterface mareTimerTableProps {\n  zoom: boolean;\n  readyCountText: string;\n  mareCountText: string;\n};\n\nconst MareTimerTable = React.memo((props: mareTimerTableProps) => {\n  const { zoom, readyCountText, mareCountText } = props;\n\n  return(\n    <div css={classes.timerDisplayTable}>\n      <h6 tw='sm:block hidden dark:text-white'>メアタイマー</h6>\n      <div tw='flex-grow flex items-center sm:items-start w-max mx-auto text-3xl'>\n        <div tw='w-36 mr-4 text-center block sm:hidden'>\n          <span>メア<br />タイマー</span>\n        </div>\n        <div tw='flex flex-col'>\n          <div tw='flex'>\n            <TimerTextLabel4 css={zoom && classes.zoomTimerTextLabel4}>発動時間</TimerTextLabel4>\n            <TimerDataLabel css={zoom && classes.zoomTimerDataLabel}>{readyCountText}</TimerDataLabel>\n          </div>\n          <div tw='flex'>\n            <TimerTextLabel4 css={zoom && classes.zoomTimerTextLabel4}>終了時間</TimerTextLabel4>\n            <TimerDataLabel css={zoom && classes.zoomTimerDataLabel}>{mareCountText}</TimerDataLabel>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\ninterface shinmaTimerTableProps {\n  zoom: boolean;\n  shinmaCountText: string;\n  shinmaEndTime: string;\n};\n\nconst ShinmaTimerTable = React.memo((props: shinmaTimerTableProps) => {\n  const { zoom, shinmaCountText, shinmaEndTime } = props;\n\n  return(\n    <div css={classes.timerDisplayTable}>\n      <h6 tw='hidden sm:block dark:text-white'>神魔タイマー</h6>\n      <div tw='flex-grow flex items-center sm:items-start w-max mx-auto text-3xl'>\n        <div tw='w-36 mr-4 text-center block sm:hidden'>\n          <span>神魔<br />タイマー</span>\n        </div>\n        <div tw='flex flex-col'>\n          <div tw='flex'>\n            <TimerTextLabel4 css={zoom && classes.zoomTimerTextLabel4}>残り時間</TimerTextLabel4>\n            <TimerDataLabel css={zoom && classes.zoomTimerDataLabel}>{shinmaCountText}</TimerDataLabel>\n          </div>\n          <div tw='flex'>\n            <TimerTextLabel4 css={zoom && classes.zoomTimerTextLabel4}>終了時刻</TimerTextLabel4>\n            <TimerDataLabel css={zoom && classes.zoomTimerDataLabel}>{shinmaEndTime}</TimerDataLabel>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\ninterface timerDisplayTableProps {\n  coloCountText: string;\n  coloMareStartTime: string;\n  coloMareEndTime: string;\n  coloMareId: string;\n  readyCountText: string;\n  mareCountText: string;\n  shinmaCountText: string;\n  shinmaEndTime: string;\n}\n\nconst TimerDisplayTable = (props: timerDisplayTableProps) => {\n  const { coloCountText, coloMareStartTime, coloMareEndTime, coloMareId, readyCountText, mareCountText, shinmaCountText, shinmaEndTime } = props;\n  const [zoom, setZoom] = useState<boolean>(false);\n\n  useEffect(() => {\n    setZoom(localStorage.getItem(`timerZoom`) === `in`);\n  }, []);\n\n  const handleZoomButton = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      localStorage.setItem(`timerZoom`, `in`);\n      setZoom(true);\n    } else {\n      localStorage.setItem(`timerZoom`, `out`);\n      setZoom(false);\n    }\n  };\n\n  return (\n    <div tw='flex flex-wrap relative'>\n      <div tw='absolute top-0 right-4'>\n        <input\n          type='checkbox'\n          id='zoomButton'\n          tw='absolute appearance-none'\n          onChange={(e) => handleZoomButton(e)}\n        />\n        <label\n          htmlFor='zoomButton'\n          tw='inline-block w-12 h-10 cursor-pointer rounded transition ease px-2 py-1 bg-transb-16 hover:bg-transb-24 dark:(bg-transw-24 hover:bg-transw-16)'\n        >\n          {zoom\n            ?\n            <svg tw='w-8 h-8' xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM13 10H7\" />\n            </svg>\n            :\n            <svg tw='w-8 h-8' xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7\" />\n            </svg>\n          }\n        </label>\n      </div>\n      <TimerTable\n        zoom={zoom}\n        coloCountText={coloCountText}\n        coloMareStartTime={coloMareStartTime}\n        coloMareEndTime={coloMareEndTime}\n        coloMareId={coloMareId}\n      />\n      <MareTimerTable\n        zoom={zoom}\n        readyCountText={readyCountText}\n        mareCountText={mareCountText}\n      />\n      <ShinmaTimerTable\n        zoom={zoom}\n        shinmaCountText={shinmaCountText}\n        shinmaEndTime={shinmaEndTime}\n      />\n    </div>\n  );\n};\n\nexport default TimerDisplayTable;\n"],"sourceRoot":""}