{"version":3,"sources":["webpack:///./src/pages/calc/timer/timerHistory-table.tsx","webpack:///./src/pages/calc/timer/timerSetting-table.tsx"],"names":["classes","headerCell","cell","TimerHistoryTable","history","props","setHistory","handleDeleteAllButton","useCallback","onClick","css","key","index","filename","row","x","handleDeleteButton","TriggerComponent","triggers","updateTriggers","toggleCheck","value","type","id","onChange","e","checked","htmlFor","OptionComponent","optButtonDisabled","handleRestartButtonWithSnack","handleMinusButtonWithSnack","handleShorteningButtonWithSnack","handleClearButtonWithSnack","aria-label","disabled","TimerSettingTable","startButtonDisabled","handleShinmaButton","handleStartButton","handleRestartButton","handleShorteningButton","handleMinusButton","handleClearButton","handleNightmareButton"],"mappings":"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","file":"component---src-pages-calc-timer-timer-setting-table-tsx-a75bea81b10f90a25a8f.js","sourcesContent":["import React, { useCallback } from \"react\";\nimport { AnyImage } from \"src/components\";\nimport { Trash } from \"src/components/icons\";\nimport tw from 'twin.macro';\nimport { historyProps } from \"./timer-table\";\n\nconst classes = {\n  headerCell: tw`\n    lg:w-20 w-16 whitespace-nowrap border-b-2 border-blue-200\n  `,\n  cell: tw`\n    lg:text-2xl text-lg whitespace-nowrap font-bold font-mono\n  `\n}\n\ninterface timerHistoryProps {\n  history: historyProps[];\n  setHistory: React.Dispatch<React.SetStateAction<historyProps[]>>;\n}\n\nconst TimerHistoryTable = React.memo((props: timerHistoryProps) => {\n  const { history, setHistory } = props;\n\n  const handleDeleteAllButton = useCallback(() => {\n    setHistory([]);\n  }, []);\n  \n  const handleDeleteButton = (row: historyProps) => {\n    setHistory(history.filter(x => x !== row));\n  }\n\n  return (\n    <>\n      <div tw='relative'>\n        <h2 tw='h-12'>発動履歴</h2>\n        <div tw='absolute top-0 right-0'>\n          <button\n            tw='h-10 bg-rose-600 text-white text-lg leading-loose rounded-md px-3 py-1 mx-2 transition ease select-none hover:bg-rose-800 focus:outline-none focus-visible:ring'\n            onClick={() => handleDeleteAllButton()}\n          >\n            一括削除\n          </button>\n        </div>\n      </div>\n      <div>\n        <table tw='text-xl text-center'>\n          <thead>\n            <tr>\n              <th css={classes.headerCell}>発動メア</th>\n              <th css={classes.headerCell}>準備</th>\n              <th css={classes.headerCell}>発動</th>\n              <th css={classes.headerCell}>終了</th>\n              <th css={classes.headerCell}>削除</th>\n            </tr>\n          </thead>\n          <tbody>\n            {(history || []).map((row: historyProps, index: number) => (\n              <tr key={`history-${index}`}>\n                <td tw='w-20 h-20'>\n                  <AnyImage filename={`cards/CardS${(('' + row.id).length < 5 ? ('0000' + row.id).slice(-4) : row.id)}.png`} />\n                </td>\n                <td css={classes.cell}>{row.nowText.slice(3,8)}</td>\n                <td css={classes.cell}>{row.readyText.slice(3,8)}</td>\n                <td css={classes.cell}>{row.endText.slice(3,8)}</td>\n                <td>\n                  <button\n                    tw='h-12 w-12 bg-rose-600 text-white rounded-md px-2 py-1 sm:px-2 sm:py-1 sm:m-2 transition ease select-none hover:bg-rose-800 focus:outline-none focus-visible:ring'\n                    onClick={() => handleDeleteButton(row)}\n                  >\n                    <Trash />\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n});\n\nexport default TimerHistoryTable;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport 'twin.macro';\nimport { AnyImage } from \"src/components\";\nimport { Trash } from \"src/components/icons\";\nimport NightmareTabs from \"./nightmare-tabs\";\nimport { Functions } from \"src/hooks/use-set\";\nimport { historyProps } from \"./timer-table\";\nimport TimerHistoryTable from \"./timerHistory-table\";\nimport { MediaMobile } from \"src/store\";\n\n//何故か効かない\nconst TriggerComponent = React.memo((props: { triggers: Set<string>; updateTriggers: Functions<string>; }) => {  \n  const { triggers, updateTriggers } = props;\n  const toggleCheck = (value: string):boolean => {\n    return (triggers || new Set()).has(value);\n  }\n\n  return (\n    <div tw='flex flex-col m-1'>\n      <div tw='inline-flex flex-row mb-1'>\n        <div tw='relative h-16 rounded-l-md overflow-hidden'>\n          <input\n            type='checkbox'\n            id='trigger-5s'\n            value='5s'\n            tw='w-16 h-16 box-border appearance-none cursor-pointer transition ease focus:outline-none focus-visible:ring border border-gray-400\n              hover:bg-focus checked:bg-disabled dark:checked:bg-darkhover\n              rounded-l-md'\n            onChange={(e) => updateTriggers.toggle(e.target.value)}\n            checked={toggleCheck('5s')}\n          />\n          <div tw='absolute left-0 top-0 w-full h-full -z-1 transform scale-110'>\n            <AnyImage filename='cards/CardS5975.png' />\n          </div>\n        </div>\n        <div tw='relative h-16 rounded-r-md overflow-hidden'>\n          <input\n            type='checkbox'\n            id='trigger-90s'\n            value='90s'\n            tw='w-16 h-16 box-border appearance-none cursor-pointer transition ease focus:outline-none focus-visible:ring border border-gray-400\n              hover:bg-focus checked:bg-disabled dark:checked:bg-darkhover\n              rounded-r-md border-l-0'\n            onChange={(e) => updateTriggers.toggle(e.target.value)}\n            checked={toggleCheck('90s')}\n          />\n          <div tw='absolute left-0 top-0 w-full h-full -z-1 transform scale-110'>\n            <AnyImage filename='cards/CardS7549.png' />\n          </div>\n        </div>\n      </div>\n      <div tw='inline-flex'>\n        <label\n          htmlFor='trigger-5s'\n          tw='w-16 text-sm text-center cursor-pointer overflow-hidden'\n        >\n          3rdユノ\n        </label>\n        <label\n          htmlFor='trigger-90s'\n          tw='w-16 text-sm text-center cursor-pointer overflow-hidden'\n        >\n          サルト\n        </label>\n      </div>\n    </div>\n  );\n});\n\nconst OptionComponent: React.FCX<{\n  optButtonDisabled: boolean;\n  handleRestartButtonWithSnack: () => void;\n  handleMinusButtonWithSnack: () => void;\n  handleShorteningButtonWithSnack: () => void;\n  handleClearButtonWithSnack: () => void;\n}> = React.memo(({ optButtonDisabled, handleRestartButtonWithSnack, handleMinusButtonWithSnack, handleShorteningButtonWithSnack, handleClearButtonWithSnack }) => {\n  return (\n    <div tw='flex justify-between p-2 lg:px-16'>\n      <div tw='flex'>\n        <div tw='flex flex-col'>\n          <button\n            tw='relative w-16 h-16 items-center rounded-full p-1 sm:px-4 sm:py-2 ml-1 sm:m-2 transition ease select-none hover:bg-focus active:bg-active disabled:bg-disabled focus:outline-none focus-visible:ring overflow-hidden'\n            id='res-restart'\n            aria-label='逆刻'\n            onClick={() => handleRestartButtonWithSnack()}\n            disabled={optButtonDisabled}\n          >\n            <div tw='absolute -top-2 -left-2 w-20 h-20 -z-1'>\n              <AnyImage filename='cards/CardS6416.png' />\n            </div>\n          </button>\n          <label\n            htmlFor='res-restart'\n            tw='w-full text-sm text-center cursor-pointer overflow-hidden'\n          >\n            ロボンゴ\n          </label>\n        </div>\n        <div tw='flex flex-col'>\n          <button\n            tw='relative w-16 h-16 items-center rounded-full p-1 sm:px-4 sm:py-2 ml-1 sm:m-2 transition ease select-none hover:bg-focus active:bg-active disabled:bg-disabled focus:outline-none focus-visible:ring overflow-hidden'\n            id='res-shortening'\n            aria-label='順刻'\n            onClick={() => handleShorteningButtonWithSnack()}\n            disabled={optButtonDisabled}\n          >\n            <div tw='absolute -top-2 -left-2 w-20 h-20 -z-1'>\n              <AnyImage filename='cards/CardS2672.png' />\n            </div>\n          </button>\n          <label\n            htmlFor='res-shortening'\n            tw='w-full text-sm text-center cursor-pointer overflow-hidden'\n          >\n            ガリア\n          </label>\n        </div>\n        <div tw='flex flex-col'>\n          <button\n            tw='w-16 h-16 items-center bg-emerald-500 text-white rounded-full px-2 py-1 sm:px-4 sm:py-2 ml-1 sm:m-2 transition ease select-none hover:bg-emerald-700 disabled:bg-gray-400 focus:outline-none focus-visible:ring'\n            id='res-minus'\n            aria-label='-1秒'\n            onClick={() => handleMinusButtonWithSnack()}\n            disabled={optButtonDisabled}\n          >\n            <span tw='block text-center'>-1</span>\n          </button>\n          <label\n            htmlFor='res-minus'\n            tw='w-full text-sm text-center cursor-pointer overflow-hidden'\n          >\n            微調整\n          </label>\n        </div>\n      </div>\n      <button\n        tw='flex h-16 items-center bg-rose-600 text-white rounded-md px-4 py-1 sm:px-4 sm:py-2 sm:m-2 transition ease select-none hover:bg-rose-800 focus:outline-none focus-visible:ring'\n        onClick={() => handleClearButtonWithSnack()}\n      >\n        <Trash />\n        <span tw='sm:block hidden'>クリア</span>\n      </button>\n    </div>\n  )\n});\n\ninterface timerSettingTableProps {\n  triggers: Set<string>;\n  updateTriggers: Functions<string>;\n  optButtonDisabled: boolean;\n  startButtonDisabled: boolean;\n  handleShinmaButton: () => void;\n  handleStartButton: () => void;\n  handleRestartButton: () => void;\n  handleShorteningButton: () => void;\n  handleMinusButton: () => void;\n  handleClearButton: () => void;\n  handleNightmareButton: (e: React.MouseEvent<HTMLElement>) => void;\n};\n\nconst TimerSettingTable = React.memo((props: timerSettingTableProps) => {\n  //console.log('setting rendered');\n  const { triggers, updateTriggers, optButtonDisabled, startButtonDisabled, handleShinmaButton, handleStartButton, handleRestartButton, handleShorteningButton, handleMinusButton, handleClearButton, handleNightmareButton } = props;\n\n  //Snackbar\n  const handleShinmaButtonWithSnack = () => {\n    handleShinmaButton();\n  }\n\n  const handleRestartButtonWithSnack = () => {\n    handleRestartButton();\n  };\n\n  const handleShorteningButtonWithSnack = () => {\n    handleShorteningButton();\n  };\n\n  const handleMinusButtonWithSnack = () => {\n    handleMinusButton();\n  };\n\n  const handleClearButtonWithSnack = useCallback(() => {\n    handleClearButton();\n  }, []);\n\n  return(\n    <div tw='p-2'>\n      <h6 tw='dark:text-white'>タイマー設定</h6>\n      <div>\n        <div tw='flex flex-row justify-between items-center px-4 lg:px-20'>\n          <TriggerComponent triggers={triggers} updateTriggers={updateTriggers} />\n          <div>\n            <button\n              tw='text-2xl bg-blue-600 text-white rounded-lg py-2 px-4 transition ease select-none hover:bg-blue-800 disabled:bg-gray-400 focus:outline-none focus-visible:ring'\n              onClick={() => handleShinmaButtonWithSnack()}\n            >\n              神魔効果開始\n            </button>\n          </div>\n        </div>\n        <div tw='w-full px-2'>\n          <button\n            tw='w-full text-4xl bg-lightblue-500 text-white rounded-2xl p-6 transition ease select-none hover:bg-lightblue-700 disabled:bg-gray-400 focus:outline-none focus-visible:ring'\n            onClick={() => handleStartButton()}\n            disabled={startButtonDisabled}\n          >\n            ナイトメア準備\n          </button>\n        </div>\n        <div>\n          <OptionComponent\n            optButtonDisabled={optButtonDisabled}\n            handleRestartButtonWithSnack={handleRestartButtonWithSnack}\n            handleShorteningButtonWithSnack={handleShorteningButtonWithSnack}\n            handleMinusButtonWithSnack={handleMinusButtonWithSnack}\n            handleClearButtonWithSnack={handleClearButtonWithSnack}\n          />\n        </div>\n        <div>\n          <NightmareTabs handleNightmareButton={handleNightmareButton} />\n        </div>\n      </div>\n    </div>\n  );\n});\n\nconst NightmareTabsComponent: React.FCX<{\n  history: historyProps[];\n  setHistory: React.Dispatch<React.SetStateAction<historyProps[]>>;\n  handleNightmareButton: (e: React.MouseEvent<HTMLElement>) => void;\n}> = ({ history, setHistory, handleNightmareButton }) => {\n  const { isMobile } = MediaMobile.useContainer();\n  if (isMobile) {\n    return (\n      <div>\n        {/* Tab */}\n        <NightmareTabs handleNightmareButton={handleNightmareButton} />\n\n        <div tw='w-max mx-6'>\n          <TimerHistoryTable\n            history={history}\n            setHistory={setHistory}\n          />\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <NightmareTabs handleNightmareButton={handleNightmareButton} />\n    );\n  }\n};\n  \nexport default TimerSettingTable;\n"],"sourceRoot":""}