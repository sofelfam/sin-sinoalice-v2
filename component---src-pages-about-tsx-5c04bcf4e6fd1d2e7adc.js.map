{"version":3,"sources":["webpack:///./src/internal/about.mdx","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose/_index.mjs","webpack:///./src/pages/about.tsx","webpack:///./src/styles/base-style.ts"],"names":["layoutProps","_frontmatter","MDXContent","components","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","mdxType","isMDXComponent","Component","className","StyledComponent","path","title","pathname"],"mappings":"6LAQMA,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,ECdU,SAAuCC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDGN,mBACD,OAAO,YALS,UAKT,eAAeT,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYY,QAAQ,cAC5E,+BACA,6CACA,kEACA,4EAKJb,EAAWc,gBAAiB,E,gBElBtBC,EAAuB,SAAC,GAAD,IAAGC,EAAH,mBAC3B,oBAAMA,UAAWA,GACf,sBADF,SAEE,cAHyB,QAOvBC,EAAkB,oCAAxB,KAIe,0BAAGC,EAAH,cACb,8BACE,iBAAKC,MAAL,QAAmBC,SAAUF,IAC7B,cAHW,S,oEChBf","file":"component---src-pages-about-tsx-5c04bcf4e6fd1d2e7adc.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`About`}</h1>\n    <p>{`this is test page.  `}</p>\n    <p>{`you can import MDX files from anywhere.  `}</p>\n    <p>{`ex. \" import MDXComponent from './about.mdx' \"  `}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\r\nimport { SEO } from 'src/components';\r\nimport AboutMDX from 'src/internal/about.mdx';\r\nimport { baseStyle } from 'src/styles';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst Component: React.FCX = ({ className }) => (\r\n  <main className={className}>\r\n    <h1>About</h1>\r\n    <AboutMDX />\r\n  </main>\r\n);\r\n\r\nconst StyledComponent = styled(Component)`\r\n  ${baseStyle}\r\n`;\r\n\r\nexport default ({ path }: { path: string }): JSX.Element => (\r\n  <>\r\n    <SEO title='about' pathname={path} />\r\n    <StyledComponent />\r\n  </>\r\n);\r\n","import { css } from '@emotion/core';\r\n\r\nexport default css`\r\n  flex: 1;\r\n\r\n  width: 100%;\r\n  max-width: 1400px;\r\n  padding: 10vh 2vw 5vw 2vw;\r\n\r\n  margin: 0 auto;\r\n\r\n  > h1 {\r\n    padding-bottom: 3rem;\r\n    font-size: 4rem;\r\n  }\r\n\r\n  @media screen and (max-width: 1100px) {\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n  }\r\n  @media screen and (max-height: 430px) {\r\n  }\r\n`;\r\n"],"sourceRoot":""}