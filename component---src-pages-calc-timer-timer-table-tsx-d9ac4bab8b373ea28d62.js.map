{"version":3,"sources":["webpack:///./src/pages/calc/timer/timerHistory-table.tsx","webpack:///./src/pages/calc/timer/timer-table.tsx","webpack:///./src/pages/calc/timer/timerDisplay-table.tsx","webpack:///./src/pages/calc/timer/timerSetting-table.tsx","webpack:///./assets/sounds/warning1.mp3","webpack:///./assets/sounds/cursor2.mp3"],"names":["classes","headerCell","cell","props","history","setHistory","onClick","css","key","index","filename","row","x","handleDeleteButton","nowZeroDate","now","useState","coloCount","setColoCount","coloCountDownRef","useRef","readyCount","setReadyCount","readyCountDownRef","mareCount","setMareCount","mareCountDownRef","startActivate","setStartActivate","coloMareTime","setColoMareTime","mareId","setMareId","shinmaCount","setShinmaCount","shinmaCountDownRef","shinmaEndTime","setShinmaEndTime","mareTimeRef","readyRef","leftTimeRef","triggers","setTriggers","clearTriggers","startButtonDisabled","setStartButtonDisabled","optButtonDisabled","setOptButtonDisabled","useEffect","startTime","getCloseColoTime","setTimeout","colo_countdown","clearTimeout","audio","setAudio","Audio","time","Number","getTimeDate","getTimeText","date","dd","hh","mm","dateValue","dateArray","getCountdownDate","endDate","Date","getEndDate","endtime","tick_tock","i","count","ready_countdown","clearInterval","mare_countdown","shinma_countdown","handleShinmaButton","useCallback","initShinma","setInterval","handleClearButton","initTime","coloCountText","coloMareStartTime","coloMareEndTime","coloMareId","readyCountText","mareCountText","shinmaCountText","handleStartButton","handleRestartButton","handleShorteningButton","handleMinusButton","handleNightmareButton","e","mareReady","mareActivate","mareStartDate","mareEndDate","tempId","countText_now","countText_ready","countText_end","id","nowText","readyText","endText","timerDisplayTable","timerTextLabel4","timerTextLabel2","timerDataLabel","TimerTable","imageId","data-id","MareTimerTable","ShinmaTimerTable","snackPack","setSnackPack","snackbarOpen","setSnackbarOpen","messageInfo","setMessageInfo","prev","handleSnackbarOpen","message","severity","getTime","handleToggleChange","newSet","Set","toggleCheck","value","type","onChange","checked","htmlFor","disabled","module","exports"],"mappings":"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","file":"component---src-pages-calc-timer-timer-table-tsx-d9ac4bab8b373ea28d62.js","sourcesContent":["import React from \"react\";\nimport { AnyImage } from \"src/components\";\nimport { Trash } from \"src/components/icons\";\nimport tw from 'twin.macro';\nimport { historyProps } from \"./timer-table\";\n\nconst classes = {\n  headerCell: tw`\n    lg:w-20 w-16 whitespace-nowrap border-b-2 border-blue-200\n  `,\n  cell: tw`\n    lg:text-2xl text-lg whitespace-nowrap font-bold font-mono\n  `\n}\n\ninterface timerHistoryProps {\n  history: historyProps[];\n  setHistory: React.Dispatch<React.SetStateAction<historyProps[]>>;\n}\n\nconst TimerHistoryTable: React.FCX<timerHistoryProps> = (props: timerHistoryProps) => {\n  const { history, setHistory } = props;\n\n  const handleDeleteAllButton = () => {\n    setHistory([]);\n  }\n  \n  const handleDeleteButton = (row: historyProps) => {\n    setHistory(history.filter(x => x !== row));\n  }\n\n  return (\n    <>\n      <div tw='relative'>\n        <h2 tw='h-12'>発動履歴</h2>\n        <div tw='absolute top-0 right-0'>\n          <button\n            tw='h-10 bg-rose-600 text-white text-lg leading-loose rounded-md px-3 py-1 mx-2 transition ease select-none hover:bg-rose-800 focus:outline-none focus-visible:ring'\n            onClick={() => handleDeleteAllButton()}\n          >\n            一括削除\n          </button>\n        </div>\n      </div>\n      <div>\n        <table tw='text-xl text-center'>\n          <thead>\n            <tr>\n              <th css={[classes.headerCell]}>発動メア</th>\n              <th css={[classes.headerCell]}>準備</th>\n              <th css={[classes.headerCell]}>発動</th>\n              <th css={[classes.headerCell]}>終了</th>\n              <th css={[classes.headerCell]}>削除</th>\n            </tr>\n          </thead>\n          <tbody>\n            {(history || []).map((row: historyProps, index: number) => (\n              <tr key={`history-${index}`}>\n                <td tw='w-20 h-20'>\n                  <AnyImage filename={`cards/CardS${('0000' + row.id).slice(-4)}.png`} />\n                </td>\n                <td css={[classes.cell]}>{row.nowText.slice(3,8)}</td>\n                <td css={[classes.cell]}>{row.readyText.slice(3,8)}</td>\n                <td css={[classes.cell]}>{row.endText.slice(3,8)}</td>\n                <td>\n                  <button\n                    tw='h-12 w-12 bg-rose-600 text-white rounded-md px-2 py-1 sm:px-2 sm:py-1 sm:m-2 transition ease select-none hover:bg-rose-800 focus:outline-none focus-visible:ring'\n                    onClick={() => handleDeleteButton(row)}\n                  >\n                    <Trash />\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default TimerHistoryTable;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport 'twin.macro';\nimport TimerDisplayTable from './timerDisplay-table';\nimport TimerHistoryTable from './timerHistory-table';\nimport TimerSettingTable from './timerSetting-table';\nimport soundStart from '../../../../assets/sounds/cursor2.mp3'\nimport soundEnd from '../../../../assets/sounds/warning1.mp3'\n\nexport interface historyProps {\n  id: string;\n  nowText: string;\n  readyText: string;\n  endText: string;\n}\n\nconst ColoTimerTable = () => {\n  const nowZeroDate = (): Date => {\n    const now = new Date();\n    now.setHours(0);\n    now.setMinutes(0);\n    now.setSeconds(0);\n    //now.setMilliseconds(0);\n    return now;\n  }\n\n  //コロシアム残り時間\n  const [coloCount, setColoCount] = useState<Date>(new Date);\n  const coloCountDownRef = useRef<NodeJS.Timeout | null>(null);\n  //発動残り時間\n  const [readyCount, setReadyCount] = useState<Date>(nowZeroDate());\n  const readyCountDownRef = useRef<NodeJS.Timeout | null>(null);\n  //効果残り時間\n  const [mareCount, setMareCount] = useState<Date>(nowZeroDate());\n  const mareCountDownRef = useRef<NodeJS.Timeout | null>(null);\n  //タイマーが起動しているかの判定\n  const [startActivate, setStartActivate] = useState<boolean>(false);\n  //発動・効果タイミング\n  const [coloMareTime, setColoMareTime] = useState<Date[]>([nowZeroDate(), nowZeroDate()]);\n  //メアID\n  const [mareId, setMareId] = useState<string>('0465');\n  //神魔残り時間\n  const [shinmaCount, setShinmaCount] = useState(nowZeroDate());\n  const shinmaCountDownRef = useRef<NodeJS.Timeout | null>(null);\n  //神魔終了タイミング\n  const [shinmaEndTime, setShinmaEndTime] = useState<Date>(nowZeroDate())\n  \n  //メアの準備,効果時間保持\n  const mareTimeRef = useRef<number[] | null>(null);\n  //タイマー測定開始時間保持\n  const readyRef = useRef<Date | null>(null);\n  //残り時間を保持\n  const leftTimeRef = useRef<Date | null>(null);\n\n  //トリガーボタン情報\n  const [triggers, setTriggers] = useState(new Set<string>());\n  const clearTriggers = () => {\n    triggers.clear();\n    setTriggers(new Set<string>());\n  }\n \n  //ボタンDisabled\n  const [startButtonDisabled, setStartButtonDisabled] = useState<boolean>(false);\n  const [optButtonDisabled, setOptButtonDisabled] = useState<boolean>(true);\n\n  //メア履歴\n  const [history, setHistory] = useState<historyProps[]>([]);\n\n  useEffect(() => {\n    const startTime = getCloseColoTime();    \n    coloCountDownRef.current = setTimeout(setColoCount.bind(null, colo_countdown(startTime)), 50);\n    return () => {\n      if (coloCountDownRef.current !== null) clearTimeout(coloCountDownRef.current);\n      coloCountDownRef.current = null;\n    };\n  }, [coloCount]);\n\n  const [audio, setAudio] = useState<HTMLAudioElement[]>();\n  useEffect(() => {\n    setAudio([new Audio(soundStart),\n              new Audio(soundEnd)]);\n  }, []);\n\n  const getCloseColoTime = (): Date => {\n    var now = new Date();\n    var time = Number(now.getHours() + '' + ('0' + now.getMinutes()).slice(-2));\n\n    if (coloCountDownRef.current !== null) clearTimeout(coloCountDownRef.current);\n    var startTime;\n    if (time <= 800) {\n      startTime = '8:00';\n    } else if (time <= 1250) {\n      startTime = '12:30';\n    } else if (time <= 1820) {\n      startTime = '18:00';\n    } else if (time <= 1920) {\n      startTime = '19:00';\n    } else if (time <= 2020) {\n      startTime = '20:00';\n    } else if (time <= 2120) {\n      startTime = '21:00';\n    } else if (time <= 2220) {\n      startTime = '22:00';\n    } else if (time <= 2320) {\n      startTime = '23:00';\n    } else {\n      startTime = '24:00';\n    }\n    return getTimeDate(startTime + ':00:00');\n  }\n\n  const getTimeText = (date: Date): string => {\n    let hh, mm, ss, dd;\n    hh = ('0' + date.getHours()).slice(-2);\n    mm = ('0' + date.getMinutes()).slice(-2);\n    ss = ('0' + date.getSeconds()).slice(-2);\n    //dd =  (date.getMilliseconds() + '0').slice(0, 2);\n    dd = 0;\n    return hh + ':' + mm + ':' + ss + ':' + dd;\n  }\n\n  const getTimeDate = (dateValue: string): Date => {\n    const dateArray = dateValue.split(':');\n\n    const date = new Date();\n    date.setHours(Number(dateArray[0]));\n    date.setMinutes(Number(dateArray[1]));\n    date.setSeconds(Number(dateArray[2]));\n    //date.setMilliseconds(Number(dateArray[3]));\n\n    return date;\n  }\n\n  //endDateまでの時間\n  const getCountdownDate = (endDate: Date): Date => {\n    const now = nowZeroDate();\n    now.setTime(now.getTime() + endDate.getTime() - new Date().getTime());\n  \n    return now;\n  }\n\n  const getEndDate = (endtime: number, date: Date): Date => {\n    const now = new Date(date);\n    now.setSeconds(date.getSeconds() + endtime);\n\n    return now;\n  }\n\n  const tick_tock = (i: number) => {\n    if(audio && audio[i]) audio[i].play();\n  }\n\n  //コロシアム残り時間\n  const colo_countdown = (date: Date): Date => {\n    const endDate = getEndDate(1200, date);\n    const count = getCountdownDate(endDate);\n    \n    if (count.getDate() !== new Date().getDate() && coloCountDownRef.current !== null) {\n      clearTimeout(coloCountDownRef.current);\n      coloCountDownRef.current = null;\n      return nowZeroDate();\n    }\n    \n    return count;\n  }\n\n  //readyカウントダウン\n  const ready_countdown = ():void => {\n    var endDate = getEndDate(mareTimeRef.current[0], readyRef.current);\n    var count = getCountdownDate(endDate);\n\n    if (count.getDate() != new Date().getDate()) {\n      tick_tock(1);\n      if (readyCountDownRef.current !== null) clearInterval(readyCountDownRef.current);\n      readyCountDownRef.current = null;\n      setReadyCount(() => nowZeroDate());\n    } else {\n      setReadyCount(count);\n      if (count.getMinutes() * 60 + count.getSeconds() == 10) {      \n        tick_tock(0);\n      }\n    }\n  };\n  \n  //メアカウントダウン\n  const mare_countdown = () => {\n    var endDate = getEndDate(mareTimeRef.current[0] + mareTimeRef.current[1], readyRef.current);\n    var count = getCountdownDate(endDate);\n\n    if (count.getDate() != new Date().getDate()) {\n      tick_tock(1);\n      setStartButtonDisabled(false);\n      setOptButtonDisabled(true);\n      clearTriggers();\n\n      if (mareCountDownRef.current !== null) clearInterval(mareCountDownRef.current);\n      mareCountDownRef.current = null;\n      setMareCount(() => nowZeroDate());\n      readyRef.current = new Date();\n      mareTimeRef.current = [0, 0];\n      setStartActivate(false);\n    } else {\n      setMareCount(count);\n      if (count.getMinutes() * 60 + count.getSeconds() == 10) {\n        tick_tock(0);\n      }\n    }\n  };\n\n  //神魔カウントダウン\n  const shinma_countdown = (time: Date) => {\n    var endDate = getEndDate(90, time);\n    var count = getCountdownDate(endDate);\n\n    if (count.getDate() != new Date().getDate()) {\n      //tick_tock(1);\n\n      if (shinmaCountDownRef.current !== null) clearInterval(shinmaCountDownRef.current);\n      shinmaCountDownRef.current = null;\n      setShinmaCount(() => nowZeroDate());\n    } else {\n      setShinmaCount(count);\n      if (count.getMinutes() * 60 + count.getSeconds() == 10) {\n        //tick_tock(0);\n      }\n    }\n  }\n\n  const handleShinmaButton = useCallback(() => {\n    const initShinma = new Date();\n    //tick_tock(0);\n    setShinmaEndTime(getEndDate(-90, coloCount));\n    \n    if (shinmaCountDownRef.current !== null) clearInterval(shinmaCountDownRef.current);\n    shinmaCountDownRef.current = setInterval(shinma_countdown.bind(undefined, initShinma), 50);\n  }, [coloCount]);\n\n  const handleStartButton = () => {\n    setStartActivate(true);\n    readyRef.current = new Date();\n    leftTimeRef.current = coloCount;\n    tick_tock(0);\n\n    if (readyCountDownRef.current !== null) clearInterval(readyCountDownRef.current);\n    readyCountDownRef.current = null;\n    if (mareCountDownRef.current !== null) clearInterval(mareCountDownRef.current);\n    mareCountDownRef.current = null;\n\n    setStartButtonDisabled(true);\n  }\n\n  const handleRestartButton = () => {\n    //キマイラ、ウインゴ設置後起動メアに対して正常に動作しない（mareTimeRef.current[0]がそれになっている）\n    //設置型起動の場合、mareTimeRef.current[2]に元の時間を保持、この部分のみで[2]チェック\n    \n    readyRef.current = new Date();\n    setColoMareTime([getEndDate(-1-mareTimeRef.current[0], coloCount), getEndDate(-1-mareTimeRef.current[0]-mareTimeRef.current[1], coloCount)]);\n    \n    if (readyCountDownRef.current !== null) clearInterval(readyCountDownRef.current);\n    readyCountDownRef.current = null;\n    if (mareCountDownRef.current !== null) clearInterval(mareCountDownRef.current);\n    mareCountDownRef.current = null;\n    readyCountDownRef.current = setInterval(ready_countdown, 50);\n    mareCountDownRef.current = setInterval(mare_countdown, 50);\n  }\n\n  const handleShorteningButton = () => {\n    readyRef.current = getEndDate(-60, readyRef.current);\n    leftTimeRef.current = getEndDate(60, leftTimeRef.current);\n    setColoMareTime([getEndDate(60, coloMareTime[0]), getEndDate(60, coloMareTime[1])]);\n  }\n  \n  const handleMinusButton = () => {\n    readyRef.current = getEndDate(-1, readyRef.current);\n    leftTimeRef.current = getEndDate(1, leftTimeRef.current);\n    setColoMareTime([getEndDate(1, coloMareTime[0]), getEndDate(1, coloMareTime[1])]);\n  }\n\n  const handleClearButton = useCallback(() => {\n    const initTime = nowZeroDate();\n    setReadyCount(initTime);\n    setMareCount(initTime);\n    readyRef.current = new Date();\n    mareTimeRef.current = [0, 0];\n    setStartActivate(false);\n    setColoMareTime([initTime, initTime])\n    setMareId('0465');\n \n    if (readyCountDownRef.current !== null) clearInterval(readyCountDownRef.current);\n    readyCountDownRef.current = null;\n    if (mareCountDownRef.current !== null) clearInterval(mareCountDownRef.current);\n    mareCountDownRef.current = null;\n    \n    setStartButtonDisabled(false);\n    setOptButtonDisabled(true);\n    clearTriggers();\n  }, []);\n\n  const handleNightmareButton = (e: React.MouseEvent<HTMLElement>) => {\n    if (startActivate === false) {\n      readyRef.current = new Date;\n      leftTimeRef.current = coloCount;\n      tick_tock(0);\n    }\n    setStartActivate(true);\n\n    const mareReady = triggers.has('90s') ? 90 :\n                      triggers.has('5s') ? 5 :\n                      e.currentTarget.dataset.ready === undefined ? 0 : +e.currentTarget.dataset.ready;\n    const mareActivate = e.currentTarget.dataset.activate === undefined ? 0 : +e.currentTarget.dataset.activate;\n    mareTimeRef.current = [mareReady, mareActivate];\n\n    const mareStartDate = getEndDate(-1-mareTimeRef.current[0], leftTimeRef.current);\n    const mareEndDate = getEndDate(-1-mareTimeRef.current[0]-mareTimeRef.current[1], leftTimeRef.current);\n    setColoMareTime([mareStartDate, mareEndDate]);\n    const tempId = e.currentTarget.dataset.id === undefined ? '0465' : e.currentTarget.dataset.id;\n    setMareId(tempId);\n    \n    if (readyCountDownRef.current !== null) clearInterval(readyCountDownRef.current);\n    readyCountDownRef.current = null;\n    if (mareCountDownRef.current !== null) clearInterval(mareCountDownRef.current);\n    mareCountDownRef.current = null;\n    readyCountDownRef.current = setInterval(ready_countdown, 50);\n    mareCountDownRef.current = setInterval(mare_countdown, 50);\n    \n    setStartButtonDisabled(true);\n    setOptButtonDisabled(false);\n\n    const countText_now = getTimeText(getEndDate(-1, leftTimeRef.current));\n    const countText_ready = getTimeText(getEndDate(mareTimeRef.current[0] * -1 - 1, leftTimeRef.current));\n    const countText_end = getTimeText(getEndDate((mareTimeRef.current[0] + mareTimeRef.current[1]) * -1 - 1, leftTimeRef.current));\n\n    setHistory(history => [...history, {id: tempId, nowText: countText_now, readyText: countText_ready, endText: countText_end}]);\n  }\n\n  return(\n    <div tw='flex lg:w-4/5 lg:mx-auto w-full mx-0'>\n      <div tw='flex-grow flex flex-col'>\n        <TimerDisplayTable\n          coloCountText={getTimeText(coloCount).slice(0,8)}\n          coloMareStartTime={getTimeText(coloMareTime[0]).slice(0,8)}\n          coloMareEndTime={getTimeText(coloMareTime[1]).slice(0,8)}\n          coloMareId={mareId}\n          readyCountText={getTimeText(readyCount).slice(0,8)}\n          mareCountText={getTimeText(mareCount).slice(0,8)}\n          shinmaCountText={getTimeText(shinmaCount).slice(0,8)}\n          shinmaEndTime={getTimeText(shinmaEndTime).slice(0,8)}\n        />\n        <TimerSettingTable\n          triggers={triggers}\n          setTriggers={setTriggers}\n          optButtonDisabled={optButtonDisabled}\n          startButtonDisabled={startButtonDisabled}\n          handleShinmaButton={handleShinmaButton}\n          handleStartButton={handleStartButton}\n          handleRestartButton={handleRestartButton}\n          handleShorteningButton={handleShorteningButton}\n          handleMinusButton={handleMinusButton}\n          handleClearButton={handleClearButton}\n          handleNightmareButton={handleNightmareButton}\n        />\n      </div>\n      <div tw='md:w-max md:ml-6 md:block w-0 ml-0 hidden'>\n        <TimerHistoryTable\n          history={history}\n          setHistory={setHistory}\n        />\n      </div>\n    </div>\n  )\n};\n\nexport default ColoTimerTable;\n","import React from \"react\";\nimport { AnyImage } from \"src/components\";\nimport tw from 'twin.macro';\n\nconst classes = {\n  timerDisplayTable: tw`\n    flex flex-col sm:w-1/3 w-full p-2\n  `,\n  timerTextLabel4: tw`\n    w-36 m-1 text-center font-bold border-b border-gray-400\n  `,\n  timerTextLabel2: tw`\n    w-16 m-1 text-center font-bold border-b border-gray-400\n  `,\n  timerDataLabel: tw`\n    w-40 m-1 text-center font-mono font-bold border-b border-gray-400\n  `,\n};\n\ninterface timerTableProps {\n  coloCountText: string;\n  coloMareId: string;\n  coloMareStartTime: string;\n  coloMareEndTime: string;\n};\n\nconst TimerTable = (props: timerTableProps) => {\n  const { coloCountText, coloMareId, coloMareStartTime, coloMareEndTime } = props;\n  const imageId = ('0000' + coloMareId).slice(-4);\n\n  return(\n    <div css={[classes.timerDisplayTable]}>\n      <h6 tw='sm:block hidden'>コロシアム残り時間</h6>\n      <div tw='flex-grow flex items-center sm:items-start w-max mx-auto text-3xl'>\n        <div tw='w-32 mr-4 text-center block sm:hidden'>\n          <span>コロシアム<br />残り時間</span>\n        </div>\n        <div tw='flex flex-col'>\n          <div tw='flex flex-row'>\n            <div css={[classes.timerTextLabel4]}>全体時間</div>\n            <div css={[classes.timerDataLabel]}>{coloCountText}</div>\n          </div>\n          <div tw='flex'>\n            <div tw='w-20 h-20 my-1'>\n              <div data-id={coloMareId} />\n              <AnyImage filename={`cards/CardS${imageId}.png`} />\n            </div>\n            <div>\n              <div tw='flex' >\n                <div css={[classes.timerTextLabel2]}>発動</div>\n                <div css={[classes.timerDataLabel]}>{coloMareStartTime}</div>\n              </div>\n              <div tw='flex'>\n                <div css={[classes.timerTextLabel2]}>終了</div>\n                <div css={[classes.timerDataLabel]}>{coloMareEndTime}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface mareTimerTableProps {\n  readyCountText: string;\n  mareCountText: string;\n};\n\nconst MareTimerTable = (props: mareTimerTableProps) => {\n  const { readyCountText, mareCountText } = props;\n\n  return(\n    <div css={[classes.timerDisplayTable]}>\n      <h6 tw='sm:block hidden'>メアタイマー</h6>\n      <div tw='flex-grow flex items-center sm:items-start w-max mx-auto text-3xl'>\n        <div tw='w-32 mr-4 text-center block sm:hidden'>\n          <span>メア<br />タイマー</span>\n        </div>\n        <div tw='flex flex-col'>\n          <div tw='flex'>\n            <div css={[classes.timerTextLabel4]}>発動時間</div>\n            <div css={[classes.timerDataLabel]}>{readyCountText}</div>\n          </div>\n          <div tw='flex'>\n            <div css={[classes.timerTextLabel4]}>終了時間</div>\n            <div css={[classes.timerDataLabel]}>{mareCountText}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface shinmaTimerTableProps {\n  shinmaCountText: string;\n  shinmaEndTime: string;\n};\n\nconst ShinmaTimerTable = (props: shinmaTimerTableProps) => {\n  const { shinmaCountText, shinmaEndTime } = props;\n\n  return(\n    <div css={[classes.timerDisplayTable]}>\n      <h6 tw='hidden sm:block'>神魔タイマー</h6>\n      <div tw='flex-grow flex items-center sm:items-start w-max mx-auto text-3xl'>\n        <div tw='w-32 mr-4 text-center block sm:hidden'>\n          <span>神魔<br />タイマー</span>\n        </div>\n        <div tw='flex flex-col'>\n          <div tw='flex'>\n            <div css={[classes.timerTextLabel4]}>残り時間</div>\n            <div css={[classes.timerDataLabel]}>{shinmaCountText}</div>\n          </div>\n          <div tw='flex'>\n            <div css={[classes.timerTextLabel4]}>終了時刻</div>\n            <div css={[classes.timerDataLabel]}>{shinmaEndTime}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface timerDisplayTableProps {\n  coloCountText: string;\n  coloMareStartTime: string;\n  coloMareEndTime: string;\n  coloMareId: string;\n  readyCountText: string;\n  mareCountText: string;\n  shinmaCountText: string;\n  shinmaEndTime: string;\n}\n\nconst TimerDisplayTable = (props: timerDisplayTableProps) => {\n  const { coloCountText, coloMareStartTime, coloMareEndTime, coloMareId, readyCountText, mareCountText, shinmaCountText, shinmaEndTime } = props;\n\n  return (\n    <div tw='flex flex-wrap'>\n      <TimerTable\n        coloCountText={coloCountText}\n        coloMareStartTime={coloMareStartTime}\n        coloMareEndTime={coloMareEndTime}\n        coloMareId={coloMareId}\n      />\n      <MareTimerTable\n        readyCountText={readyCountText}\n        mareCountText={mareCountText}\n      />\n      <ShinmaTimerTable\n        shinmaCountText={shinmaCountText}\n        shinmaEndTime={shinmaEndTime}\n      />\n    </div>\n  );\n};\n\nexport default TimerDisplayTable;\n","import React, { useEffect, useState } from \"react\";\nimport 'twin.macro';\nimport { AnyImage } from \"src/components\";\nimport { Trash } from \"src/components/icons\";\nimport NightmareTabs from \"./nightmare-tabs\";\n\ninterface timerSettingTableProps {\n  triggers: Set<string>;\n  setTriggers:  React.Dispatch<React.SetStateAction<Set<string>>>;\n  optButtonDisabled: boolean;\n  startButtonDisabled: boolean;\n  handleShinmaButton: () => void;\n  handleStartButton: () => void;\n  handleRestartButton: () => void;\n  handleShorteningButton: () => void;\n  handleMinusButton: () => void;\n  handleClearButton: () => void;\n  handleNightmareButton: (e: React.MouseEvent<HTMLElement>) => void;\n};\n\nconst TimerSettingTable = (props: timerSettingTableProps) => {\n  const { triggers, setTriggers, optButtonDisabled, startButtonDisabled, handleShinmaButton, handleStartButton, handleRestartButton, handleShorteningButton, handleMinusButton, handleClearButton, handleNightmareButton } = props;\n\n  //ボタントリガーアラート\n  interface SnackbarMessage {\n    message: string;\n    severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n    key: number;\n  }\n  \n  const [snackPack, setSnackPack] = useState<SnackbarMessage[]>([]);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [messageInfo, setMessageInfo] = useState<SnackbarMessage | undefined>(undefined);\n\n  useEffect(() => {\n    if (snackPack.length && !messageInfo) {\n      // Set a new snack when we don't have an active one\n      setMessageInfo({ ...snackPack[0] });\n      setSnackPack((prev) => prev.slice(1));\n      setSnackbarOpen(true);\n    } else if (snackPack.length && messageInfo && snackbarOpen) {\n      // Close an active snack when a new one is added\n      setSnackbarOpen(false);\n    }\n  }, [snackPack, messageInfo, snackbarOpen]);\n\n  const handleSnackbarOpen = (message: string, severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined) => {\n    //setSnackbarOpen(true);\n    setSnackPack((prev) => [...prev, { message, severity, key: new Date().getTime() }]);\n  }\n\n  const handleSnackbarClose = (reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n\n  const handleExited = () => {\n    setMessageInfo(undefined);\n  };\n\n  const handleToggleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newSet = new Set(triggers);\n    if (newSet.has(e.target.value)) {\n      newSet.delete(e.target.value);\n    } else {\n      newSet.add(e.target.value);\n    }\n    setTriggers(newSet);\n  }\n\n  const toggleCheck = (value: string):boolean => {\n    return (triggers || new Set()).has(value);\n  }\n\n  const handleShinmaButtonWithSnack = () => {\n    handleShinmaButton();\n    handleSnackbarOpen(\"神魔効果タイマー開始。\", \"info\");\n  }\n\n  const handleRestartButtonWithSnack = () => {\n    handleRestartButton();\n    handleSnackbarOpen(\"[逆刻] 起動メア巻き戻し。\", \"info\");\n  }\n\n  const handleShorteningButtonWithSnack = () => {\n    handleShorteningButton();\n    handleSnackbarOpen(\"[順刻] 起動メア60秒減少。\", \"info\");\n  }\n\n  const handleMinusButtonWithSnack = () => {\n    handleMinusButton();\n    handleSnackbarOpen(\"-1秒しました。\", \"success\");\n  }\n\n  const handleClearButtonWithSnack = () => {\n    handleClearButton();\n    handleSnackbarOpen(\"クリアしました。\", \"success\");\n  }\n\n  return(\n    <div tw='p-2'>\n      <h6>タイマー設定</h6>\n      <div>\n        <div tw='flex flex-row justify-between items-center px-4'>\n          <div tw='flex flex-col m-1'>\n            <div tw='inline-flex flex-row mb-1'>\n              <div tw='relative h-16 rounded-l-md overflow-hidden'>\n                <input\n                  type='checkbox'\n                  id='trigger-5s'\n                  value='5s'\n                  tw='w-16 h-16 box-border appearance-none cursor-pointer transition ease focus:outline-none focus-visible:ring border border-gray-400\n                    hover:bg-focus checked:bg-disabled dark:checked:bg-darkhover\n                    rounded-l-md'\n                  onChange={(e) => handleToggleChange(e)}\n                  checked={toggleCheck('5s')}\n                />\n                <div tw='absolute left-0 top-0 w-full h-full -z-1'>\n                  <AnyImage filename='cards/CardS5975.png' />\n                </div>\n              </div>\n              <div tw='relative h-16 rounded-r-md overflow-hidden'>\n                <input\n                  type='checkbox'\n                  id='trigger-90s'\n                  value='90s'\n                  tw='w-16 h-16 box-border appearance-none cursor-pointer transition ease focus:outline-none focus-visible:ring border border-gray-400\n                    hover:bg-focus checked:bg-disabled dark:checked:bg-darkhover\n                    rounded-r-md border-l-0'\n                  onChange={(e) => handleToggleChange(e)}\n                  checked={toggleCheck('90s')}\n                />\n                <div tw='absolute left-0 top-0 w-full h-full -z-1'>\n                  <AnyImage filename='cards/CardS7549.png' />\n                </div>\n              </div>\n            </div>\n            <div tw='inline-flex'>\n              <label\n                htmlFor='trigger-5s'\n                tw='w-16 text-sm text-center cursor-pointer overflow-hidden'\n              >\n                3rdユノ\n              </label>\n              <label\n                htmlFor='trigger-90s'\n                tw='w-16 text-sm text-center cursor-pointer overflow-hidden'\n              >\n                サルト\n              </label>\n            </div>\n          </div>\n          <div>\n            <button\n              tw='text-2xl bg-blue-600 text-white rounded-lg py-2 px-4 transition ease select-none hover:bg-blue-800 disabled:bg-gray-400 focus:outline-none focus-visible:ring'\n              onClick={() => handleShinmaButtonWithSnack()}\n            >\n              神魔効果開始\n            </button>\n          </div>\n        </div>\n        <div tw='w-full px-2'>\n          <button\n            tw='w-full text-4xl bg-lightblue-500 text-white rounded-2xl p-6 transition ease select-none hover:bg-lightblue-700 disabled:bg-gray-400 focus:outline-none focus-visible:ring'\n            onClick={() => handleStartButton()}\n            disabled={startButtonDisabled}\n          >\n            ナイトメア準備\n          </button>\n        </div>\n        <div>\n          <div tw='flex justify-between p-2'>\n            <div tw='flex'>\n              <div tw='flex flex-col'>\n                <button\n                  tw='relative w-16 h-16 items-center rounded-full p-1 sm:px-4 sm:py-2 ml-1 sm:m-2 transition ease select-none hover:bg-focus active:bg-active disabled:bg-disabled focus:outline-none focus-visible:ring overflow-hidden'\n                  id='res-restart'\n                  onClick={() => handleRestartButtonWithSnack()}\n                  disabled={optButtonDisabled}\n                >\n                  <div tw='absolute -top-2 -left-2 w-20 h-20 -z-1'>\n                    <AnyImage filename='cards/CardS6416.png' />\n                  </div>\n                </button>\n                <label\n                  htmlFor='res-restart'\n                  tw='w-full text-sm text-center cursor-pointer overflow-hidden'\n                >\n                  ロボンゴ\n                </label>\n              </div>\n              <div tw='flex flex-col'>\n                <button\n                  tw='relative w-16 h-16 items-center rounded-full p-1 sm:px-4 sm:py-2 ml-1 sm:m-2 transition ease select-none hover:bg-focus active:bg-active disabled:bg-disabled focus:outline-none focus-visible:ring overflow-hidden'\n                  id='res-shortening'\n                  onClick={() => handleShorteningButtonWithSnack()}\n                  disabled={optButtonDisabled}\n                >\n                  <div tw='absolute -top-2 -left-2 w-20 h-20 -z-1'>\n                    <AnyImage filename='cards/CardS2672.png' />\n                  </div>\n                </button>\n                <label\n                  htmlFor='res-shortening'\n                  tw='w-full text-sm text-center cursor-pointer overflow-hidden'\n                >\n                  ガリア\n                </label>\n              </div>\n              <div tw='flex flex-col'>\n                <button\n                  tw='w-16 h-16 items-center bg-emerald-500 text-white rounded-full px-2 py-1 sm:px-4 sm:py-2 ml-1 sm:m-2 transition ease select-none hover:bg-emerald-700 disabled:bg-gray-400 focus:outline-none focus-visible:ring'\n                  id='res-minus'\n                  onClick={() => handleMinusButtonWithSnack()}\n                  disabled={optButtonDisabled}\n                >\n                  <span tw='block text-center'>-1</span>\n                </button>\n                <label\n                  htmlFor='res-minus'\n                  tw='w-full text-sm text-center cursor-pointer overflow-hidden'\n                >\n                  微調整\n                </label>\n              </div>\n            </div>\n            <button\n              tw='flex h-16 items-center bg-rose-600 text-white rounded-md px-4 py-1 sm:px-4 sm:py-2 sm:m-2 transition ease select-none hover:bg-rose-800 focus:outline-none focus-visible:ring'\n              onClick={() => handleClearButtonWithSnack()}\n            >\n              <Trash />\n              <span tw='sm:block hidden'>クリア</span>\n            </button>\n          </div>\n        </div>\n        <div>\n          <NightmareTabs handleNightmareButton={handleNightmareButton} />\n        </div>\n      </div>\n    </div>\n  )\n};\n  \nexport default TimerSettingTable;\n","module.exports = __webpack_public_path__ + \"static/warning1-066edbab5ef950bc88ed83dcb20e9f31.mp3\";","module.exports = \"data:audio/mpeg;base64,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IU2qmzayyLru9bEqwRiCPp0fQmT5JUnQlFMKRUWUxk2e0XeyuSqTr3aSR7aFXdo4f/b//+lsrrATfr4BmkAA0SNDs0zUwHh4GBYOGRCAIDlO0AxIwE0ugSJRi2ngLcoCFKprNFcHU1xbQYuEU45LpsBYuJVkU0T0LKyJcUnENIpocltytki6SIkj3fa/Cg9HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dP//uSRIaJkzciRNNvYlBUJChmbelKAAABnAAAAAAAADOAAAAAR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0FQRVRBR0VY0AcAAEAAAAABAAAAAAAAoAAAAAAAAAAACwAAAAAAAABNUDNHQUlOX1VORE8AKzAwNCwrMDA0LE5BUEVUQUdFWNAHAABAAAAAAQAAAAAAAIAAAAAAAAAAAA==\""],"sourceRoot":""}