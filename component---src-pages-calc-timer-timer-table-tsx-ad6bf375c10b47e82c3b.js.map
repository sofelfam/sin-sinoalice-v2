{"version":3,"sources":["webpack:///./src/pages/calc/timer/timerHistory-table.tsx","webpack:///./src/pages/calc/timer/timer-table.tsx","webpack:///./src/pages/calc/timer/timerDisplay-table.tsx","webpack:///./src/pages/calc/timer/timerSetting-table.tsx"],"names":["nowZeroDate","now","useState","coloCount","setColoCount","coloCountDownRef","useRef","readyCount","setReadyCount","readyCountDownRef","mareCount","setMareCount","mareCountDownRef","startActivate","setStartActivate","coloMareTime","setColoMareTime","mareId","setMareId","shinmaCount","setShinmaCount","shinmaCountDownRef","shinmaEndTime","setShinmaEndTime","mareTimeRef","readyRef","leftTimeRef","triggers","setTriggers","startButtonDisabled","setStartButtonDisabled","optButtonDisabled","setOptButtonDisabled","useEffect","startTime","getCloseColoTime","setTimeout","colo_countdown","clearTimeout","audio","setAudio","Audio","time","Number","getTimeDate","getTimeText","date","dd","hh","mm","dateValue","dateArray","getCountdownDate","endDate","Date","getEndDate","endtime","tick_tock","i","count","ready_countdown","clearInterval","mare_countdown","shinma_countdown","handleShinmaButton","useCallback","initShinma","setInterval","handleClearButton","initTime","coloCountText","coloMareStartTime","coloMareEndTime","coloMareId","readyCountText","mareCountText","shinmaCountText","handleTriggers","_event","handleStartButton","handleRestartButton","handleShorteningButton","handleMinusButton","handleNightmareButton","e","mareReady","mareActivate","mareStartDate","mareEndDate","classes","timerDisplayTable","timerTextLabel4","timerTextLabel2","timerDataLabel","TimerTable","props","css","data-id","MareTimerTable","ShinmaTimerTable","snackPack","setSnackPack","snackbarOpen","setSnackbarOpen","messageInfo","setMessageInfo","prev","handleSnackbarOpen","message","severity","key","getTime","type","id","filename","htmlFor","onClick","disabled"],"mappings":"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","file":"component---src-pages-calc-timer-timer-table-tsx-ad6bf375c10b47e82c3b.js","sourcesContent":["import React from \"react\";\nimport tw from 'twin.macro';\n\nconst TimerHistoryTable = () => {\n  return (\n    <>\n      <h2>発動履歴</h2>\n    </>\n  );\n};\n\nexport default TimerHistoryTable;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport 'twin.macro';\nimport TimerDisplayTable from './timerDisplay-table';\nimport TimerHistoryTable from './timerHistory-table';\nimport TimerSettingTable from './timerSetting-table';\n\nconst ColoTimerTable = () => {\n  const nowZeroDate = (): Date => {\n    const now = new Date();\n    now.setHours(0);\n    now.setMinutes(0);\n    now.setSeconds(0);\n    //now.setMilliseconds(0);\n    return now;\n  }\n\n  //コロシアム残り時間\n  const [coloCount, setColoCount] = useState(new Date);\n  const coloCountDownRef = useRef<NodeJS.Timeout | null>(null);\n  //発動残り時間\n  const [readyCount, setReadyCount] = useState(nowZeroDate());\n  const readyCountDownRef = useRef<NodeJS.Timeout | null>(null);\n  //効果残り時間\n  const [mareCount, setMareCount] = useState(nowZeroDate());\n  const mareCountDownRef = useRef<NodeJS.Timeout | null>(null);\n  //タイマーが起動しているかの判定\n  const [startActivate, setStartActivate] = useState(false);\n  //発動・効果タイミング\n  const [coloMareTime, setColoMareTime] = useState([nowZeroDate(), nowZeroDate()]);\n  //メアID\n  const [mareId, setMareId] = useState(\"0465\");\n  //神魔残り時間\n  const [shinmaCount, setShinmaCount] = useState(nowZeroDate());\n  const shinmaCountDownRef = useRef<NodeJS.Timeout | null>(null);\n  //神魔終了タイミング\n  const [shinmaEndTime, setShinmaEndTime] = useState(nowZeroDate())\n  \n  //メア時間保持\n  const mareTimeRef = useRef<number[] | null>(null);\n  //タイマー測定開始時間保持\n  const readyRef = useRef<Date | null>(null);\n  //残り時間を保持\n  const leftTimeRef = useRef<Date | null>(null);\n\n  //トリガーボタン情報\n  const [triggers, setTriggers] = useState<string[]>([]);\n  const handleTriggers = (_event: React.MouseEvent<HTMLElement>, newTriggers: string[]) => {\n    setTriggers(newTriggers);\n  };\n\n  //ボタンDisabled\n  const [startButtonDisabled, setStartButtonDisabled] = useState(false);\n  const [optButtonDisabled, setOptButtonDisabled] = useState(true);\n\n  useEffect(() => {\n    const startTime = getCloseColoTime();    \n    coloCountDownRef.current = setTimeout(setColoCount.bind(null, colo_countdown(startTime)), 50);\n    return () => {\n      if (coloCountDownRef.current !== null) clearTimeout(coloCountDownRef.current);\n      coloCountDownRef.current = null;\n    };\n  }, [coloCount]);\n\n  const [audio, setAudio] = useState<HTMLAudioElement[]>();\n  useEffect(() => {\n    setAudio([new Audio(\"../../static/sounds/cursor2.mp3\"),\n              new Audio(\"../../static/sounds/warning1.mp3\")])\n  }, []);\n\n  const getCloseColoTime = (): Date => {\n    var now = new Date();\n    var time = Number(now.getHours() + \"\" + (\"0\" + now.getMinutes()).slice(-2));\n\n    if (coloCountDownRef.current !== null) clearTimeout(coloCountDownRef.current);\n    var startTime;\n    if (time <= 800) {\n      startTime = \"8:00\";\n    } else if (time <= 1250) {\n      startTime = \"12:30\";\n    } else if (time <= 1820) {\n      startTime = \"18:00\";\n    } else if (time <= 1920) {\n      startTime = \"19:00\";\n    } else if (time <= 2020) {\n      startTime = \"20:00\";\n    } else if (time <= 2120) {\n      startTime = \"21:00\";\n    } else if (time <= 2220) {\n      startTime = \"22:00\";\n    } else if (time <= 2320) {\n      startTime = \"23:00\";\n    } else {\n      startTime = \"24:00\";\n    }\n    return getTimeDate(startTime + \":00:00\");\n  }\n\n  const getTimeText = (date: Date): string => {\n    let hh, mm, ss, dd;\n    hh = (\"0\" + date.getHours()).slice(-2);\n    mm = (\"0\" + date.getMinutes()).slice(-2);\n    ss = (\"0\" + date.getSeconds()).slice(-2);\n    //dd =  (date.getMilliseconds() + \"0\").slice(0, 2);\n    dd = 0;\n    return hh + \":\" + mm + \":\" + ss + \":\" + dd;\n  }\n\n  const getTimeDate = (dateValue: string): Date => {\n    const dateArray = dateValue.split(\":\");\n\n    const date = new Date();\n    date.setHours(Number(dateArray[0]));\n    date.setMinutes(Number(dateArray[1]));\n    date.setSeconds(Number(dateArray[2]));\n    //date.setMilliseconds(Number(dateArray[3]));\n\n    return date;\n  }\n\n  //endDateまでの時間\n  const getCountdownDate = (endDate: Date): Date => {\n    const now = nowZeroDate();\n    now.setTime(now.getTime() + endDate.getTime() - new Date().getTime());\n  \n    return now;\n  }\n\n  const getEndDate = (endtime: number, date: Date): Date => {\n    const now = new Date(date);\n    now.setSeconds(date.getSeconds() + endtime);\n\n    return now;\n  }\n\n  const tick_tock = (i: number) => {\n    if(audio && audio[i]) audio[i].play();\n  }\n\n  //コロシアム残り時間\n  const colo_countdown = (date: Date): Date => {\n    const endDate = getEndDate(1200, date);\n    const count = getCountdownDate(endDate);\n    \n    if (count.getDate() !== new Date().getDate() && coloCountDownRef.current !== null) {\n      clearTimeout(coloCountDownRef.current);\n      coloCountDownRef.current = null;\n      return nowZeroDate();\n    }\n    \n    return count;\n  }\n\n  //readyカウントダウン\n  const ready_countdown = ():void => {\n    var endDate = getEndDate(mareTimeRef.current[0], readyRef.current);\n    var count = getCountdownDate(endDate);\n\n    if (count.getDate() != new Date().getDate()) {\n      tick_tock(1);\n      if (readyCountDownRef.current !== null) clearInterval(readyCountDownRef.current);\n      readyCountDownRef.current = null;\n      setReadyCount(() => nowZeroDate());\n    } else {\n      setReadyCount(count);\n      if (count.getMinutes() * 60 + count.getSeconds() == 10) {      \n        tick_tock(0);\n      }\n    }\n  };\n  \n  //メアカウントダウン\n  const mare_countdown = () => {\n    var endDate = getEndDate(mareTimeRef.current[0] + mareTimeRef.current[1], readyRef.current);\n    var count = getCountdownDate(endDate);\n\n    if (count.getDate() != new Date().getDate()) {\n      tick_tock(1);\n      setStartButtonDisabled(false);\n      setOptButtonDisabled(true);\n      setTriggers([]);\n\n      if (mareCountDownRef.current !== null) clearInterval(mareCountDownRef.current);\n      mareCountDownRef.current = null;\n      setMareCount(() => nowZeroDate());\n      readyRef.current = new Date();\n      mareTimeRef.current = [0, 0];\n      setStartActivate(false);\n    } else {\n      setMareCount(count);\n      if (count.getMinutes() * 60 + count.getSeconds() == 10) {\n        tick_tock(0);\n      }\n    }\n  };\n\n  //神魔カウントダウン\n  const shinma_countdown = (time: Date) => {\n    var endDate = getEndDate(90, time);\n    var count = getCountdownDate(endDate);\n\n    if (count.getDate() != new Date().getDate()) {\n      //tick_tock(1);\n\n      if (shinmaCountDownRef.current !== null) clearInterval(shinmaCountDownRef.current);\n      shinmaCountDownRef.current = null;\n      setShinmaCount(() => nowZeroDate());\n    } else {\n      setShinmaCount(count);\n      if (count.getMinutes() * 60 + count.getSeconds() == 10) {\n        //tick_tock(0);\n      }\n    }\n  }\n\n  const handleShinmaButton = useCallback(() => {\n    const initShinma = new Date();\n    //tick_tock(0);\n    setShinmaEndTime(getEndDate(-90, coloCount));\n    \n    if (shinmaCountDownRef.current !== null) clearInterval(shinmaCountDownRef.current);\n    shinmaCountDownRef.current = setInterval(shinma_countdown.bind(undefined, initShinma), 50);\n  }, [coloCount]);\n\n  const handleStartButton = () => {\n    setStartActivate(true);\n    readyRef.current = new Date();\n    leftTimeRef.current = coloCount;\n    tick_tock(0);\n\n    if (readyCountDownRef.current !== null) clearInterval(readyCountDownRef.current);\n    readyCountDownRef.current = null;\n    if (mareCountDownRef.current !== null) clearInterval(mareCountDownRef.current);\n    mareCountDownRef.current = null;\n\n    setStartButtonDisabled(true);\n  }\n\n  const handleRestartButton = () => {\n    //キマイラ、ウインゴ設置後起動メアに対して正常に動作しない（mareTimeRef.current[0]がそれになっている）\n    //設置型起動の場合、mareTime[2]に元の時間を保持、この部分のみで[2]チェック\n    \n\n    readyRef.current = new Date();\n    setColoMareTime([getEndDate(-1-mareTimeRef.current[0], coloCount), getEndDate(-1-mareTimeRef.current[0]-mareTimeRef.current[1], coloCount)]);\n    \n    if (readyCountDownRef.current !== null) clearInterval(readyCountDownRef.current);\n    readyCountDownRef.current = null;\n    if (mareCountDownRef.current !== null) clearInterval(mareCountDownRef.current);\n    mareCountDownRef.current = null;\n    readyCountDownRef.current = setInterval(ready_countdown, 50);\n    mareCountDownRef.current = setInterval(mare_countdown, 50);\n  }\n\n  const handleShorteningButton = () => {\n    readyRef.current = getEndDate(-60, readyRef.current);\n    leftTimeRef.current = getEndDate(60, leftTimeRef.current);\n    setColoMareTime([getEndDate(60, coloMareTime[0]), getEndDate(60, coloMareTime[1])]);\n  }\n  \n  const handleMinusButton = () => {\n    readyRef.current = getEndDate(-1, readyRef.current);\n    leftTimeRef.current = getEndDate(1, leftTimeRef.current);\n    setColoMareTime([getEndDate(1, coloMareTime[0]), getEndDate(1, coloMareTime[1])]);\n  }\n\n  const handleClearButton = useCallback(() => {\n    const initTime = nowZeroDate();\n    setReadyCount(initTime);\n    setMareCount(initTime);\n    readyRef.current = new Date();\n    mareTimeRef.current = [0, 0];\n    setStartActivate(false);\n    setColoMareTime([initTime, initTime])\n \n    if (readyCountDownRef.current !== null) clearInterval(readyCountDownRef.current);\n    readyCountDownRef.current = null;\n    if (mareCountDownRef.current !== null) clearInterval(mareCountDownRef.current);\n    mareCountDownRef.current = null;\n    \n    setStartButtonDisabled(false);\n    setOptButtonDisabled(true);\n    setTriggers([]);\n  }, []);\n\n  const handleNightmareButton = (e: React.MouseEvent<HTMLElement>) => {\n    if (startActivate === false) {\n      readyRef.current = new Date;\n      leftTimeRef.current = coloCount;\n      tick_tock(0);\n    }\n    setStartActivate(true);\n\n    const mareReady = triggers.indexOf('90s') !== -1 ? 90 :\n                      triggers.indexOf('short') !== -1 ? 5 :\n                      e.currentTarget.dataset.ready === undefined ? 0 : +e.currentTarget.dataset.ready;\n    const mareActivate = e.currentTarget.dataset.activate === undefined ? 0 : +e.currentTarget.dataset.activate;\n    mareTimeRef.current = [mareReady, mareActivate];\n\n    const mareStartDate = getEndDate(-1-mareTimeRef.current[0], leftTimeRef.current);\n    const mareEndDate = getEndDate(-1-mareTimeRef.current[0]-mareTimeRef.current[1], leftTimeRef.current);\n    setColoMareTime([mareStartDate, mareEndDate]);\n    setMareId(e.currentTarget.dataset.id === undefined ? \"0465\" : e.currentTarget.dataset.id);\n    \n    if (readyCountDownRef.current !== null) clearInterval(readyCountDownRef.current);\n    readyCountDownRef.current = null;\n    if (mareCountDownRef.current !== null) clearInterval(mareCountDownRef.current);\n    mareCountDownRef.current = null;\n    readyCountDownRef.current = setInterval(ready_countdown, 50);\n    mareCountDownRef.current = setInterval(mare_countdown, 50);\n    \n    setStartButtonDisabled(true);\n    setOptButtonDisabled(false);\n\n    /*  発動・効果タイミング\n    var countText_now = getTimeText(getEndDate(-1, last_time_act));\n    var countText_ready = getTimeText(getEndDate(ready * -1 - 1, last_time_act));\n    var countText_end = getTimeText(getEndDate((ready + activate) * -1 - 1, last_time_act));\n\n    $(\"#next_icon\").attr(\"src\", \"https://sinoalice.game-db.tw/images/card/CardS\" + $(this).data(\"id\") + \".png\");\n    $(\"#next_ready\").html(countText_ready);\n    $(\"#next_end\").html(countText_end);\n    */\n  }\n\n  return(\n    <div tw='flex'>\n      <div tw='flex-grow flex flex-col'>\n        <TimerDisplayTable\n          coloCountText={getTimeText(coloCount).slice(0,8)}\n          coloMareStartTime={getTimeText(coloMareTime[0]).slice(0,8)}\n          coloMareEndTime={getTimeText(coloMareTime[1]).slice(0,8)}\n          coloMareId={mareId}\n          readyCountText={getTimeText(readyCount).slice(0,8)}\n          mareCountText={getTimeText(mareCount).slice(0,8)}\n          shinmaCountText={getTimeText(shinmaCount).slice(0,8)}\n          shinmaEndTime={getTimeText(shinmaEndTime).slice(0,8)}\n        />\n        <TimerSettingTable\n          triggers={triggers}\n          handleTriggers={handleTriggers}\n          optButtonDisabled={optButtonDisabled}\n          startButtonDisabled={startButtonDisabled}\n          handleShinmaButton={handleShinmaButton}\n          handleStartButton={handleStartButton}\n          handleRestartButton={handleRestartButton}\n          handleShorteningButton={handleShorteningButton}\n          handleMinusButton={handleMinusButton}\n          handleClearButton={handleClearButton}\n          handleNightmareButton={handleNightmareButton}\n        />\n      </div>\n      <div tw='md:w-1/3 md:block w-0 hidden'>\n        <TimerHistoryTable />\n      </div>\n    </div>\n  )\n};\n\nexport default ColoTimerTable;\n","import React from \"react\";\nimport tw from 'twin.macro';\n\nconst classes = {\n  timerDisplayTable: tw`\n    flex flex-col sm:w-1/3 w-full p-2\n  `,\n  timerTextLabel4: tw`\n    w-36 m-1 text-center font-bold border-b border-gray-400\n  `,\n  timerTextLabel2: tw`\n    w-16 m-1 text-center font-bold border-b border-gray-400\n  `,\n  timerDataLabel: tw`\n    w-40 m-1 text-center font-mono font-bold border-b border-gray-400\n  `,\n};\n\ninterface timerTableProps {\n  coloCountText: string;\n  coloMareId: string;\n  coloMareStartTime: string;\n  coloMareEndTime: string;\n};\n\nconst TimerTable = (props: timerTableProps) => {\n  const { coloCountText, coloMareId, coloMareStartTime, coloMareEndTime } = props;\n\n  return(\n    <div css={[classes.timerDisplayTable]}>\n      <h6 tw='sm:block hidden'>コロシアム残り時間</h6>\n      <div tw='flex-grow flex items-center sm:items-start w-max mx-auto text-3xl'>\n        <div tw='w-32 mr-4 text-center block sm:hidden'>\n          <span>コロシアム<br />残り時間</span>\n        </div>\n        <div tw='flex flex-col'>\n          <div tw='flex flex-row'>\n            <div css={[classes.timerTextLabel4]}>全体時間</div>\n            <div css={[classes.timerDataLabel]}>{coloCountText}</div>\n          </div>\n          <div tw='flex'>\n            <div tw='w-20 h-20 my-1'>\n              <div data-id={coloMareId} />\n            </div>\n            <div>\n              <div tw='flex' >\n                <div css={[classes.timerTextLabel2]}>発動</div>\n                <div css={[classes.timerDataLabel]}>{coloMareStartTime}</div>\n              </div>\n              <div tw='flex'>\n                <div css={[classes.timerTextLabel2]}>終了</div>\n                <div css={[classes.timerDataLabel]}>{coloMareEndTime}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface mareTimerTableProps {\n  readyCountText: string;\n  mareCountText: string;\n};\n\nconst MareTimerTable = (props: mareTimerTableProps) => {\n  const { readyCountText, mareCountText } = props;\n\n  return(\n    <div css={[classes.timerDisplayTable]}>\n      <h6 tw='sm:block hidden'>メアタイマー</h6>\n      <div tw='flex-grow flex items-center sm:items-start w-max mx-auto text-3xl'>\n        <div tw='w-32 mr-4 text-center block sm:hidden'>\n          <span>メア<br />タイマー</span>\n        </div>\n        <div tw='flex flex-col'>\n          <div tw='flex'>\n            <div css={[classes.timerTextLabel4]}>発動時間</div>\n            <div css={[classes.timerDataLabel]}>{readyCountText}</div>\n          </div>\n          <div tw='flex'>\n            <div css={[classes.timerTextLabel4]}>終了時間</div>\n            <div css={[classes.timerDataLabel]}>{mareCountText}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface shinmaTimerTableProps {\n  shinmaCountText: string;\n  shinmaEndTime: string;\n};\n\nconst ShinmaTimerTable = (props: shinmaTimerTableProps) => {\n  const { shinmaCountText, shinmaEndTime } = props;\n\n  return(\n    <div css={[classes.timerDisplayTable]}>\n      <h6 tw='hidden sm:block'>神魔タイマー</h6>\n      <div tw='flex-grow flex items-center sm:items-start w-max mx-auto text-3xl'>\n        <div tw='w-32 mr-4 text-center block sm:hidden'>\n          <span>神魔<br />タイマー</span>\n        </div>\n        <div tw='flex flex-col'>\n          <div tw='flex'>\n            <div css={[classes.timerTextLabel4]}>残り時間</div>\n            <div css={[classes.timerDataLabel]}>{shinmaCountText}</div>\n          </div>\n          <div tw='flex'>\n            <div css={[classes.timerTextLabel4]}>終了時刻</div>\n            <div css={[classes.timerDataLabel]}>{shinmaEndTime}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface timerDisplayTableProps {\n  coloCountText: string;\n  coloMareStartTime: string;\n  coloMareEndTime: string;\n  coloMareId: string;\n  readyCountText: string;\n  mareCountText: string;\n  shinmaCountText: string;\n  shinmaEndTime: string;\n}\n\nconst TimerDisplayTable = (props: timerDisplayTableProps) => {\n  const { coloCountText, coloMareStartTime, coloMareEndTime, coloMareId, readyCountText, mareCountText, shinmaCountText, shinmaEndTime } = props;\n\n  return (\n    <div tw='flex flex-wrap'>\n      <TimerTable\n        coloCountText={coloCountText}\n        coloMareStartTime={coloMareStartTime}\n        coloMareEndTime={coloMareEndTime}\n        coloMareId={coloMareId}\n      />\n      <MareTimerTable\n        readyCountText={readyCountText}\n        mareCountText={mareCountText}\n      />\n      <ShinmaTimerTable\n        shinmaCountText={shinmaCountText}\n        shinmaEndTime={shinmaEndTime}\n      />\n    </div>\n  );\n};\n\nexport default TimerDisplayTable;\n","import React, { useEffect, useState } from \"react\";\nimport 'twin.macro';\nimport { AnyImage } from \"src/components\";\nimport { Trash } from \"src/components/icons\";\nimport NightmareTabs from \"./nightmare-tabs\";\n\ninterface timerSettingTableProps {\n  triggers: string[];\n  handleTriggers: (event: React.MouseEvent<HTMLElement>, newTriggers: string[]) => void;\n  optButtonDisabled: boolean;\n  startButtonDisabled: boolean;\n  handleShinmaButton: () => void;\n  handleStartButton: () => void;\n  handleRestartButton: () => void;\n  handleShorteningButton: () => void;\n  handleMinusButton: () => void;\n  handleClearButton: () => void;\n  handleNightmareButton: (e: React.MouseEvent<HTMLElement>) => void;\n};\n\nconst TimerSettingTable = (props: timerSettingTableProps) => {\n  const { triggers, handleTriggers, optButtonDisabled, startButtonDisabled, handleShinmaButton, handleStartButton, handleRestartButton, handleShorteningButton, handleMinusButton, handleClearButton, handleNightmareButton } = props;\n\n  //ボタントリガーアラート\n  interface SnackbarMessage {\n    message: string;\n    severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n    key: number;\n  }\n  \n  const [snackPack, setSnackPack] = useState<SnackbarMessage[]>([]);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [messageInfo, setMessageInfo] = useState<SnackbarMessage | undefined>(undefined);\n\n  useEffect(() => {\n    if (snackPack.length && !messageInfo) {\n      // Set a new snack when we don't have an active one\n      setMessageInfo({ ...snackPack[0] });\n      setSnackPack((prev) => prev.slice(1));\n      setSnackbarOpen(true);\n    } else if (snackPack.length && messageInfo && snackbarOpen) {\n      // Close an active snack when a new one is added\n      setSnackbarOpen(false);\n    }\n  }, [snackPack, messageInfo, snackbarOpen]);\n\n  const handleSnackbarOpen = (message: string, severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined) => {\n    //setSnackbarOpen(true);\n    setSnackPack((prev) => [...prev, { message, severity, key: new Date().getTime() }]);\n  }\n\n  const handleSnackbarClose = (reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n\n  const handleExited = () => {\n    setMessageInfo(undefined);\n  };\n\n  const handleShinmaButtonWithSnack = () => {\n    handleShinmaButton();\n    handleSnackbarOpen(\"神魔効果タイマー開始。\", \"info\");\n  }\n\n  const handleRestartButtonWithSnack = () => {\n    handleRestartButton();\n    handleSnackbarOpen(\"[逆刻] 起動メア巻き戻し。\", \"info\");\n  }\n\n  const handleShorteningButtonWithSnack = () => {\n    handleShorteningButton();\n    handleSnackbarOpen(\"[順刻] 起動メア60秒減少。\", \"info\");\n  }\n\n  const handleMinusButtonWithSnack = () => {\n    handleMinusButton();\n    handleSnackbarOpen(\"-1秒しました。\", \"success\");\n  }\n\n  const handleClearButtonWithSnack = () => {\n    handleClearButton();\n    handleSnackbarOpen(\"クリアしました。\", \"success\");\n  }\n\n  return(\n    <div tw='p-2'>\n      <h6>タイマー設定</h6>\n      <div>\n        <div tw='flex flex-row justify-between items-center px-4'>\n          <div tw='flex flex-col m-1'>\n            <div tw='inline-flex flex-row mb-1'>\n              <div tw='relative h-16 rounded-l-md overflow-hidden'>\n                <input\n                  type='checkbox'\n                  id='trigger-5s'\n                  tw='w-16 h-16 box-border appearance-none cursor-pointer transition ease focus:outline-none focus-visible:ring border border-gray-400\n                    hover:bg-focus checked:bg-disabled dark:checked:bg-darkhover\n                    rounded-l-md'\n                />\n                <div tw='absolute left-0 top-0 w-full h-full -z-1'>\n                  <AnyImage filename='images/cards/CardS5975.png' />\n                </div>\n              </div>\n              <div tw='relative h-16 rounded-r-md overflow-hidden'>\n                <input\n                  type='checkbox'\n                  id='trigger-5s'\n                  tw='w-16 h-16 box-border appearance-none cursor-pointer transition ease focus:outline-none focus-visible:ring border border-gray-400\n                    hover:bg-focus checked:bg-disabled dark:checked:bg-darkhover\n                    rounded-r-md border-l-0'\n                />\n                <div tw='absolute left-0 top-0 w-full h-full -z-1'>\n                  <AnyImage filename='images/cards/CardS7549.png' />\n                </div>\n              </div>\n            </div>\n            <div tw='inline-flex'>\n              <label\n                htmlFor='trigger-5s'\n                tw='w-16 text-sm text-center cursor-pointer overflow-hidden'\n              >\n                3rdユノ\n              </label>\n              <label\n                htmlFor='trigger-90s'\n                tw='w-16 text-sm text-center cursor-pointer overflow-hidden'\n              >\n                サルト\n              </label>\n            </div>\n          </div>\n          <div>\n            <button\n              tw='text-2xl bg-blue-600 text-white rounded-lg py-2 px-4 transition ease select-none hover:bg-blue-800 disabled:bg-gray-400 focus:outline-none focus-visible:ring'\n              onClick={() => handleShinmaButtonWithSnack()}\n            >\n              神魔効果開始\n            </button>\n          </div>\n        </div>\n        <div tw='w-full px-2'>\n          <button\n            tw='w-full text-4xl bg-lightblue-500 text-white rounded-2xl p-6 transition ease select-none hover:bg-lightblue-700 disabled:bg-gray-400 focus:outline-none focus-visible:ring'\n            onClick={() => handleStartButton()}\n            disabled={startButtonDisabled}\n          >\n            ナイトメア準備\n          </button>\n        </div>\n        <div>\n          <div tw='flex justify-between p-2'>\n            <div tw='flex'>\n              <div tw='flex flex-col'>\n                <button\n                  tw='relative w-16 h-16 items-center rounded-full p-1 sm:px-4 sm:py-2 ml-1 sm:m-2 transition ease select-none hover:bg-focus active:bg-active disabled:bg-disabled focus:outline-none focus-visible:ring overflow-hidden'\n                  id='res-restart'\n                  onClick={() => handleRestartButtonWithSnack()}\n                  disabled={optButtonDisabled}\n                >\n                  <div tw='absolute -top-2 -left-2 w-20 h-20 -z-1'>\n                    <AnyImage filename='images/cards/CardS6416.png' />\n                  </div>\n                </button>\n                <label\n                  htmlFor='res-restart'\n                  tw='w-full text-sm text-center cursor-pointer overflow-hidden'\n                >\n                  ロボンゴ\n                </label>\n              </div>\n              <div tw='flex flex-col'>\n                <button\n                  tw='relative w-16 h-16 items-center rounded-full p-1 sm:px-4 sm:py-2 ml-1 sm:m-2 transition ease select-none hover:bg-focus active:bg-active disabled:bg-disabled focus:outline-none focus-visible:ring overflow-hidden'\n                  id='res-shortening'\n                  onClick={() => handleShorteningButtonWithSnack()}\n                  disabled={optButtonDisabled}\n                >\n                  <div tw='absolute -top-2 -left-2 w-20 h-20 -z-1'>\n                    <AnyImage filename='images/cards/CardS2672.png' />\n                  </div>\n                </button>\n                <label\n                  htmlFor='res-shortening'\n                  tw='w-full text-sm text-center cursor-pointer overflow-hidden'\n                >\n                  ガリア\n                </label>\n              </div>\n              <div tw='flex flex-col'>\n                <button\n                  tw='w-16 h-16 items-center bg-emerald-500 text-white rounded-full px-2 py-1 sm:px-4 sm:py-2 ml-1 sm:m-2 transition ease select-none hover:bg-emerald-700 disabled:bg-gray-400 focus:outline-none focus-visible:ring'\n                  id='res-minus'\n                  onClick={() => handleMinusButtonWithSnack()}\n                  disabled={optButtonDisabled}\n                >\n                  <span tw='block text-center'>-1</span>\n                </button>\n                <label\n                  htmlFor='res-minus'\n                  tw='w-full text-sm text-center cursor-pointer overflow-hidden'\n                >\n                  微調整\n                </label>\n              </div>\n            </div>\n            <button\n              tw='flex h-16 items-center bg-rose-600 text-white rounded-md px-4 py-1 sm:px-4 sm:py-2 sm:m-2 transition ease select-none hover:bg-rose-800 focus:outline-none focus-visible:ring'\n              onClick={() => handleClearButtonWithSnack()}\n            >\n              <Trash />\n              <span tw='sm:block hidden'>クリア</span>\n            </button>\n          </div>\n        </div>\n        <div>\n          <NightmareTabs handleNightmareButton={handleNightmareButton} />\n        </div>\n      </div>\n    </div>\n  )\n};\n  \nexport default TimerSettingTable;\n"],"sourceRoot":""}