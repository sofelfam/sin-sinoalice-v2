{"version":3,"sources":["webpack:///./src/pages/calc/timer/timerDisplay-table.tsx"],"names":["classes","timerDisplayTable","timerTextLabel4","timerTextLabel2","timerDataLabel","zoomTimerTextLabel4WithIcon","zoomTimerTextLabel2WithIcon","zoomTimerDataLabelWithIcon","zoomTimerTextLabel4","zoomTimerDataLabel","TimerTable","props","zoom","coloCountText","coloMareId","coloMareStartTime","coloMareEndTime","imageId","css","data-id","filename","MareTimerTable","readyCountText","mareCountText","ShinmaTimerTable","shinmaCountText","shinmaEndTime","useState","setZoom","useEffect","localStorage","type","id","onChange","e","handleZoomButton","htmlFor","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d"],"mappings":"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","file":"component---src-pages-calc-timer-timer-display-table-tsx-45e62b26d514c401a400.js","sourcesContent":["import { css } from \"@emotion/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { AnyImage } from \"src/components\";\nimport tw from 'twin.macro';\n\nconst classes = {\n  timerDisplayTable: tw`\n    flex flex-col sm:w-1/3 w-full p-2\n  `,\n  timerTextLabel4: tw`\n    w-36 m-1 text-center font-bold border-b border-gray-400 transition ease-out\n  `,\n  timerTextLabel2: tw`\n    w-16 m-1 text-center font-bold border-b border-gray-400 transition ease-out\n  `,\n  timerDataLabel: tw`\n    w-40 m-1 text-center font-mono font-bold border-b border-gray-400 transition ease-out\n  `,\n  zoomTimerTextLabel4WithIcon: css`\n    transform: scale(0.4) translateY(-3.6rem) translateX(6.7rem);\n  `,\n  zoomTimerTextLabel2WithIcon: css`\n    transform: scale(0.4) translateY(-3.6rem) translateX(-2rem);\n  `,\n  zoomTimerDataLabelWithIcon: css`\n    transform: scale(1.3) translateX(-2rem);\n  `,\n  zoomTimerTextLabel4: css`\n    transform: scale(0.4) translateY(-3.6rem);\n  `,\n  zoomTimerDataLabel: css`\n    transform: scale(1.3) translateX(-4rem);\n  `\n};\n\ninterface timerTableProps {\n  zoom: boolean;\n  coloCountText: string;\n  coloMareId: string;\n  coloMareStartTime: string;\n  coloMareEndTime: string;\n};\n\nconst TimerTable = (props: timerTableProps) => {\n  const { zoom, coloCountText, coloMareId, coloMareStartTime, coloMareEndTime } = props;\n  const imageId = ('0000' + coloMareId).slice(-4);\n\n  return(\n    <div css={[classes.timerDisplayTable]}>\n      <h6 tw='sm:block hidden dark:text-white'>コロシアム残り時間</h6>\n      <div tw='flex-grow flex items-center sm:items-start w-max mx-auto text-3xl'>\n        <div tw='w-36 mr-4 text-center block sm:hidden'>\n          <span>コロシアム<br />残り時間</span>\n        </div>\n        <div tw='flex flex-col'>\n          <div tw='flex flex-row'>\n            <div css={[classes.timerTextLabel4, zoom ? classes.zoomTimerTextLabel4WithIcon : '']}>全体時間</div>\n            <div css={[classes.timerDataLabel, zoom ? classes.zoomTimerDataLabelWithIcon : '']}>{coloCountText}</div>\n          </div>\n          <div tw='flex'>\n            <div tw='w-20 h-20 my-1'>\n              <div data-id={coloMareId} />\n              <AnyImage filename={`cards/CardS${imageId}.png`} />\n            </div>\n            <div>\n              <div tw='flex' >\n                <div css={[classes.timerTextLabel2, zoom ? classes.zoomTimerTextLabel2WithIcon : '']}>発動</div>\n                <div css={[classes.timerDataLabel, zoom ? classes.zoomTimerDataLabelWithIcon : '']}>{coloMareStartTime}</div>\n              </div>\n              <div tw='flex'>\n                <div css={[classes.timerTextLabel2, zoom ? classes.zoomTimerTextLabel2WithIcon : '']}>終了</div>\n                <div css={[classes.timerDataLabel, zoom ? classes.zoomTimerDataLabelWithIcon : '']}>{coloMareEndTime}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface mareTimerTableProps {\n  zoom: boolean;\n  readyCountText: string;\n  mareCountText: string;\n};\n\nconst MareTimerTable = (props: mareTimerTableProps) => {\n  const { zoom, readyCountText, mareCountText } = props;\n\n  return(\n    <div css={[classes.timerDisplayTable]}>\n      <h6 tw='sm:block hidden dark:text-white'>メアタイマー</h6>\n      <div tw='flex-grow flex items-center sm:items-start w-max mx-auto text-3xl'>\n        <div tw='w-36 mr-4 text-center block sm:hidden'>\n          <span>メア<br />タイマー</span>\n        </div>\n        <div tw='flex flex-col'>\n          <div tw='flex'>\n            <div css={[classes.timerTextLabel4, zoom ? classes.zoomTimerTextLabel4 : '']}>発動時間</div>\n            <div css={[classes.timerDataLabel, zoom ? classes.zoomTimerDataLabel : '']}>{readyCountText}</div>\n          </div>\n          <div tw='flex'>\n            <div css={[classes.timerTextLabel4, zoom ? classes.zoomTimerTextLabel4 : '']}>終了時間</div>\n            <div css={[classes.timerDataLabel, zoom ? classes.zoomTimerDataLabel : '']}>{mareCountText}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface shinmaTimerTableProps {\n  zoom: boolean;\n  shinmaCountText: string;\n  shinmaEndTime: string;\n};\n\nconst ShinmaTimerTable = (props: shinmaTimerTableProps) => {\n  const { zoom, shinmaCountText, shinmaEndTime } = props;\n\n  return(\n    <div css={[classes.timerDisplayTable]}>\n      <h6 tw='hidden sm:block dark:text-white'>神魔タイマー</h6>\n      <div tw='flex-grow flex items-center sm:items-start w-max mx-auto text-3xl'>\n        <div tw='w-36 mr-4 text-center block sm:hidden'>\n          <span>神魔<br />タイマー</span>\n        </div>\n        <div tw='flex flex-col'>\n          <div tw='flex'>\n            <div css={[classes.timerTextLabel4, zoom ? classes.zoomTimerTextLabel4 : '']}>残り時間</div>\n            <div css={[classes.timerDataLabel, zoom ? classes.zoomTimerDataLabel : '']}>{shinmaCountText}</div>\n          </div>\n          <div tw='flex'>\n            <div css={[classes.timerTextLabel4, zoom ? classes.zoomTimerTextLabel4 : '']}>終了時刻</div>\n            <div css={[classes.timerDataLabel, zoom ? classes.zoomTimerDataLabel : '']}>{shinmaEndTime}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface timerDisplayTableProps {\n  coloCountText: string;\n  coloMareStartTime: string;\n  coloMareEndTime: string;\n  coloMareId: string;\n  readyCountText: string;\n  mareCountText: string;\n  shinmaCountText: string;\n  shinmaEndTime: string;\n}\n\nconst TimerDisplayTable = (props: timerDisplayTableProps) => {\n  const { coloCountText, coloMareStartTime, coloMareEndTime, coloMareId, readyCountText, mareCountText, shinmaCountText, shinmaEndTime } = props;\n  const [zoom, setZoom] = useState<boolean>(false);\n\n  useEffect(() => {\n    setZoom(localStorage.getItem(`timerZoom`) === `in`);\n  }, []);\n\n  const handleZoomButton = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      localStorage.setItem(`timerZoom`, `in`);\n      setZoom(true);\n    } else {\n      localStorage.setItem(`timerZoom`, `out`);\n      setZoom(false);\n    }\n  };\n\n  return (\n    <div tw='flex flex-wrap relative'>\n      <div tw='absolute top-0 right-4 sm:block hidden'>\n        <input\n          type='checkbox'\n          id='zoomButton'\n          tw='absolute appearance-none'\n          onChange={(e) => handleZoomButton(e)}\n        />\n        <label\n          htmlFor='zoomButton'\n          tw='inline-block w-12 h-10 cursor-pointer rounded transition ease px-2 py-1 bg-transb-16 dark:bg-transw-24 hover:bg-transb-24 dark:hover:bg-transw-16'\n        >\n          {zoom\n            ?\n            <svg tw='w-8 h-8' xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM13 10H7\" />\n            </svg>\n            :\n            <svg tw='w-8 h-8' xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7\" />\n            </svg>\n          }\n        </label>\n      </div>\n      <TimerTable\n        zoom={zoom}\n        coloCountText={coloCountText}\n        coloMareStartTime={coloMareStartTime}\n        coloMareEndTime={coloMareEndTime}\n        coloMareId={coloMareId}\n      />\n      <MareTimerTable\n        zoom={zoom}\n        readyCountText={readyCountText}\n        mareCountText={mareCountText}\n      />\n      <ShinmaTimerTable\n        zoom={zoom}\n        shinmaCountText={shinmaCountText}\n        shinmaEndTime={shinmaEndTime}\n      />\n    </div>\n  );\n};\n\nexport default TimerDisplayTable;\n"],"sourceRoot":""}