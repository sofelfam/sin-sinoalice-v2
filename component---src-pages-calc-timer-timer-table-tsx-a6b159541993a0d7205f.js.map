{"version":3,"sources":["webpack:///./src/pages/calc/timer/timerHistory-table.tsx","webpack:///./src/pages/calc/timer/timer-table.tsx","webpack:///./src/pages/calc/timer/timerDisplay-table.tsx","webpack:///./assets/sounds/warning1.mp3","webpack:///./assets/sounds/cursor2.mp3"],"names":["classes","headerCell","cell","TimerHistoryTable","history","props","setHistory","handleDeleteAllButton","useCallback","onClick","css","key","index","filename","row","x","handleDeleteButton","nowZeroDate","now","useState","coloCount","setColoCount","coloCountDownRef","useRef","readyCount","setReadyCount","readyCountDownRef","mareCount","setMareCount","mareCountDownRef","startActivate","setStartActivate","coloMareTime","setColoMareTime","mareId","setMareId","shinmaCount","setShinmaCount","shinmaCountDownRef","shinmaEndTime","setShinmaEndTime","mareTimeRef","readyRef","leftTimeRef","useSet","triggers","updateTriggers","startButtonDisabled","setStartButtonDisabled","optButtonDisabled","setOptButtonDisabled","useEffect","startTime","getCloseColoTime","setTimeout","colo_countdown","clearTimeout","audio","setAudio","Audio","firstNightmareFlag","firstShinmaFlag","time","Number","getTimeDate","getTimeText","date","dd","hh","mm","dateValue","dateArray","getCountdownDate","endDate","Date","getEndDate","endtime","tick_tock","i","count","ready_countdown","trigger","tempMareTime","clearInterval","mare_countdown","shinma_countdown","handleRestartButton","setInterval","handleShorteningButton","handleMinusButton","handleClearButton","initTime","coloCountText","coloMareStartTime","coloMareEndTime","coloMareId","readyCountText","mareCountText","shinmaCountText","handleShinmaButton","initShinma","handleStartButton","handleNightmareButton","e","mareButtonReady","mareReady","mareActivate","mareStartDate","mareEndDate","tempId","countText_now","countText_ready","countText_end","id","nowText","readyText","endText","timerDisplayTable","timerTextLabel4","timerTextLabel2","timerDataLabel","zoomTimerTextLabel4WithIcon","zoomTimerTextLabel2WithIcon","zoomTimerDataLabelWithIcon","zoomTimerTextLabel4","zoomTimerDataLabel","TimerDataLabel","TimerTextLabel2","TimerTextLabel4","TimerTable","zoom","imageId","data-id","MareTimerTable","ShinmaTimerTable","setZoom","localStorage","type","onChange","handleZoomButton","htmlFor","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","module","exports"],"mappings":"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","file":"component---src-pages-calc-timer-timer-table-tsx-a6b159541993a0d7205f.js","sourcesContent":["import React, { useCallback } from \"react\";\nimport { AnyImage } from \"src/components\";\nimport { Trash } from \"src/components/icons\";\nimport tw from 'twin.macro';\nimport { historyProps } from \"./timer-table\";\n\nconst classes = {\n  headerCell: tw`\n    lg:w-20 w-16 whitespace-nowrap border-b-2 border-blue-200\n  `,\n  cell: tw`\n    lg:text-2xl text-lg whitespace-nowrap font-bold font-mono\n  `\n}\n\ninterface timerHistoryProps {\n  history: historyProps[];\n  setHistory: React.Dispatch<React.SetStateAction<historyProps[]>>;\n}\n\nconst TimerHistoryTable = React.memo((props: timerHistoryProps) => {\n  const { history, setHistory } = props;\n\n  const handleDeleteAllButton = useCallback(() => {\n    setHistory([]);\n  }, []);\n  \n  const handleDeleteButton = (row: historyProps) => {\n    setHistory(history.filter(x => x !== row));\n  }\n\n  return (\n    <>\n      <div tw='relative'>\n        <h2 tw='h-12'>発動履歴</h2>\n        <div tw='absolute top-0 right-0'>\n          <button\n            tw='h-10 bg-rose-600 text-white text-lg leading-loose rounded-md px-3 py-1 mx-2 transition ease select-none hover:bg-rose-800 focus:outline-none focus-visible:ring'\n            onClick={() => handleDeleteAllButton()}\n          >\n            一括削除\n          </button>\n        </div>\n      </div>\n      <div>\n        <table tw='text-xl text-center'>\n          <thead>\n            <tr>\n              <th css={classes.headerCell}>発動メア</th>\n              <th css={classes.headerCell}>準備</th>\n              <th css={classes.headerCell}>発動</th>\n              <th css={classes.headerCell}>終了</th>\n              <th css={classes.headerCell}>削除</th>\n            </tr>\n          </thead>\n          <tbody>\n            {(history || []).map((row: historyProps, index: number) => (\n              <tr key={`history-${index}`}>\n                <td tw='w-20 h-20'>\n                  <AnyImage filename={`cards/CardS${('0000' + row.id).slice(-4)}.png`} />\n                </td>\n                <td css={classes.cell}>{row.nowText.slice(3,8)}</td>\n                <td css={classes.cell}>{row.readyText.slice(3,8)}</td>\n                <td css={classes.cell}>{row.endText.slice(3,8)}</td>\n                <td>\n                  <button\n                    tw='h-12 w-12 bg-rose-600 text-white rounded-md px-2 py-1 sm:px-2 sm:py-1 sm:m-2 transition ease select-none hover:bg-rose-800 focus:outline-none focus-visible:ring'\n                    onClick={() => handleDeleteButton(row)}\n                  >\n                    <Trash />\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n});\n\nexport default TimerHistoryTable;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport 'twin.macro';\nimport TimerDisplayTable from './timerDisplay-table';\nimport TimerHistoryTable from './timerHistory-table';\nimport TimerSettingTable from './timerSetting-table';\nimport soundStart from '../../../../assets/sounds/cursor2.mp3'\nimport soundEnd from '../../../../assets/sounds/warning1.mp3'\nimport { useSet } from 'src/hooks';\n\nexport interface historyProps {\n  id: string;\n  nowText: string;\n  readyText: string;\n  endText: string;\n}\n\nconst ColoTimerTable = () => {\n  const nowZeroDate = (): Date => {\n    const now = new Date();\n    now.setHours(0);\n    now.setMinutes(0);\n    now.setSeconds(0);\n    //now.setMilliseconds(0);\n    return now;\n  }\n\n  //コロシアム残り時間\n  const [coloCount, setColoCount] = useState(new Date);\n  const coloCountDownRef = useRef<NodeJS.Timeout | null>(null);\n  //発動残り時間\n  const [readyCount, setReadyCount] = useState(nowZeroDate());\n  const readyCountDownRef = useRef<NodeJS.Timeout | null>(null);\n  //効果残り時間\n  const [mareCount, setMareCount] = useState(nowZeroDate());\n  const mareCountDownRef = useRef<NodeJS.Timeout | null>(null);\n  //タイマーが起動しているかの判定\n  const [startActivate, setStartActivate] = useState(false);\n  //発動・効果タイミング\n  const [coloMareTime, setColoMareTime] = useState<Date[]>([nowZeroDate(), nowZeroDate()]);\n  //メアID\n  const [mareId, setMareId] = useState('0465');\n  //神魔残り時間\n  const [shinmaCount, setShinmaCount] = useState(nowZeroDate());\n  const shinmaCountDownRef = useRef<NodeJS.Timeout | null>(null);\n  //神魔終了タイミング\n  const [shinmaEndTime, setShinmaEndTime] = useState(nowZeroDate());\n  \n  /* [0] メア準備時間（設置型による変更加味）\n  ** [1] メア効果時間\n  ** [2] pureメア準備時間（逆刻で使用）\n  */\n  const mareTimeRef = useRef<number[] | null>(null);\n  //タイマー測定開始時間保持\n  const readyRef = useRef<Date | null>(null);\n  //残り時間を保持\n  const leftTimeRef = useRef<Date | null>(null);\n\n  //トリガーボタン情報\n  const [triggers, updateTriggers] = useSet<string>();\n \n  //ボタンDisabled\n  const [startButtonDisabled, setStartButtonDisabled] = useState(false);\n  const [optButtonDisabled, setOptButtonDisabled] = useState(true);\n\n  //メア履歴\n  const [history, setHistory] = useState<historyProps[]>([]);\n\n  useEffect(() => {\n    const startTime = getCloseColoTime();    \n    coloCountDownRef.current = setTimeout(setColoCount.bind(null, colo_countdown(startTime)), 50);\n    return () => {\n      if (coloCountDownRef.current !== null) clearTimeout(coloCountDownRef.current);\n      coloCountDownRef.current = null;\n    };\n  }, [coloCount]);\n\n  const [audio, setAudio] = useState<HTMLAudioElement[]>();\n  useEffect(() => {\n    setAudio([new Audio(soundStart),\n              new Audio(soundEnd)]);\n  }, []);\n\n  let firstNightmareFlag: boolean = true;\n  let firstShinmaFlag: boolean = true;\n\n  const getCloseColoTime = (): Date => {\n    var now = new Date();\n    var time = Number(now.getHours() + '' + ('0' + now.getMinutes()).slice(-2));\n\n    if (coloCountDownRef.current !== null) clearTimeout(coloCountDownRef.current);\n    var startTime;\n    if (time <= 800) {\n      startTime = '8:00';\n    } else if (time <= 1250) {\n      startTime = '12:30';\n    } else if (time <= 1820) {\n      startTime = '18:00';\n    } else if (time <= 1920) {\n      startTime = '19:00';\n    } else if (time <= 2020) {\n      startTime = '20:00';\n    } else if (time <= 2120) {\n      startTime = '21:00';\n    } else if (time <= 2220) {\n      startTime = '22:00';\n    } else if (time <= 2320) {\n      startTime = '23:00';\n    } else {\n      startTime = '24:00';\n    }\n    return getTimeDate(startTime + ':00:00');\n  }\n\n  const getTimeText = (date: Date): string => {\n    let hh, mm, ss, dd;\n    hh = ('0' + date.getHours()).slice(-2);\n    mm = ('0' + date.getMinutes()).slice(-2);\n    ss = ('0' + date.getSeconds()).slice(-2);\n    //dd =  (date.getMilliseconds() + '0').slice(0, 2);\n    dd = 0;\n    return hh + ':' + mm + ':' + ss + ':' + dd;\n  }\n\n  const getTimeDate = (dateValue: string): Date => {\n    const dateArray = dateValue.split(':');\n    const date = new Date();\n    date.setHours(Number(dateArray[0]));\n    date.setMinutes(Number(dateArray[1]));\n    date.setSeconds(Number(dateArray[2]));\n    //date.setMilliseconds(Number(dateArray[3]));\n    return date;\n  }\n\n  //endDateまでの時間\n  const getCountdownDate = (endDate: Date): Date => {\n    const now = nowZeroDate();\n    now.setTime(now.getTime() + endDate.getTime() - new Date().getTime());\n    return now;\n  }\n\n  const getEndDate = (endtime: number, date: Date): Date => {\n    const now = new Date(date);\n    if (!endtime) return now;\n    now.setSeconds(date.getSeconds() + endtime);\n    return now;\n  }\n\n  const tick_tock = (i: number) => {\n    if(audio && audio[i]) audio[i].play();\n  }\n\n  //コロシアム残り時間\n  const colo_countdown = (date: Date): Date => {\n    const endDate = getEndDate(1200, date);\n    const count = getCountdownDate(endDate);\n    \n    if (count.getDate() !== new Date().getDate() && coloCountDownRef.current !== null) {\n      clearTimeout(coloCountDownRef.current);\n      coloCountDownRef.current = null;\n      return nowZeroDate();\n    }\n    \n    return count;\n  }\n  \n  // readyカウントダウン\n  // trigger: 設置型を無視するか否か\n  const ready_countdown = (trigger?: boolean): void => {\n    if (!(mareTimeRef.current !== null && readyRef.current !== null)) return;\n    const tempMareTime = trigger ? mareTimeRef.current[2] : mareTimeRef.current[0];\n    var endDate = getEndDate(tempMareTime, readyRef.current);\n    var count = getCountdownDate(endDate);\n\n    if (count.getDate() != new Date().getDate()) {\n      tick_tock(1);\n      firstNightmareFlag = true;\n      if (readyCountDownRef.current !== null) clearInterval(readyCountDownRef.current);\n      readyCountDownRef.current = null;\n      setReadyCount(() => nowZeroDate());\n    } else {\n      setReadyCount(count);\n      if (firstNightmareFlag && count.getMinutes() * 60 + count.getSeconds() == 10) {      \n        tick_tock(0);\n        firstNightmareFlag = false;\n      }\n    }\n  };\n  \n  //メアカウントダウン\n  const mare_countdown = (): void => {\n    if (!(mareTimeRef.current !== null && readyRef.current !== null)) return;\n    var endDate = getEndDate(mareTimeRef.current[0] + mareTimeRef.current[1], readyRef.current);\n    var count = getCountdownDate(endDate);\n\n    if (count.getDate() != new Date().getDate()) {\n      tick_tock(1);\n      firstNightmareFlag = true;\n      setStartButtonDisabled(false);\n      setOptButtonDisabled(true);\n      updateTriggers.clear();\n\n      if (mareCountDownRef.current !== null) clearInterval(mareCountDownRef.current);\n      mareCountDownRef.current = null;\n      setMareCount(() => nowZeroDate());\n      readyRef.current = new Date();\n      mareTimeRef.current = [0, 0];\n      setStartActivate(false);\n    } else {\n      setMareCount(count);\n      if (firstNightmareFlag && count.getMinutes() * 60 + count.getSeconds() == 10) {\n        tick_tock(0);\n        firstNightmareFlag = false;\n      }\n    }\n  };\n\n  //神魔カウントダウン\n  const shinma_countdown = (time: Date) => {\n    var endDate = getEndDate(90, time);\n    var count = getCountdownDate(endDate);\n\n    if (count.getDate() != new Date().getDate()) {\n      tick_tock(1);\n      firstShinmaFlag = true;\n\n      if (shinmaCountDownRef.current !== null) clearInterval(shinmaCountDownRef.current);\n      shinmaCountDownRef.current = null;\n      setShinmaCount(() => nowZeroDate());\n    } else {\n      setShinmaCount(count);\n      if (firstShinmaFlag && count.getMinutes() * 60 + count.getSeconds() == 10) {\n        tick_tock(0);\n        firstShinmaFlag = false;\n      }\n    }\n  }\n\n  const handleShinmaButton = (() => {\n    const initShinma = new Date();\n    tick_tock(0);\n    setShinmaEndTime(getEndDate(-90, coloCount));\n    \n    if (shinmaCountDownRef.current !== null) clearInterval(shinmaCountDownRef.current);\n    shinmaCountDownRef.current = setInterval(shinma_countdown.bind(undefined, initShinma), 50);\n  });\n\n  const handleStartButton = () => {\n    setStartActivate(true);\n    readyRef.current = new Date();\n    leftTimeRef.current = coloCount;\n    tick_tock(0);\n\n    if (readyCountDownRef.current !== null) clearInterval(readyCountDownRef.current);\n    readyCountDownRef.current = null;\n    if (mareCountDownRef.current !== null) clearInterval(mareCountDownRef.current);\n    mareCountDownRef.current = null;\n\n    setStartButtonDisabled(true);\n  };\n\n  const handleRestartButton = useCallback(() => {\n    readyRef.current = new Date();\n    if (mareTimeRef.current !== null) setColoMareTime([getEndDate(-1 - mareTimeRef.current[2], coloCount), getEndDate(-1 - mareTimeRef.current[2] - mareTimeRef.current[1], coloCount)]);\n    \n    if (readyCountDownRef.current !== null) clearInterval(readyCountDownRef.current);\n    readyCountDownRef.current = null;\n    if (mareCountDownRef.current !== null) clearInterval(mareCountDownRef.current);\n    mareCountDownRef.current = null;\n    readyCountDownRef.current = setInterval(ready_countdown.bind(undefined, true), 50);\n    mareCountDownRef.current = setInterval(mare_countdown, 50);\n  }, [readyRef.current, leftTimeRef.current, mareTimeRef.current]);\n\n  const handleShorteningButton = useCallback(() => {\n    if (!(readyRef.current !== null && leftTimeRef.current !== null)) return;\n    readyRef.current = getEndDate(-60, readyRef.current);\n    leftTimeRef.current = getEndDate(60, leftTimeRef.current);\n    setColoMareTime([getEndDate(60, coloMareTime[0]), getEndDate(60, coloMareTime[1])]);\n  }, [readyRef.current, leftTimeRef.current, coloMareTime]);\n  \n  const handleMinusButton = useCallback(() => {\n    if (!(readyRef.current !== null && leftTimeRef.current !== null)) return;\n    readyRef.current = getEndDate(-1, readyRef.current);\n    leftTimeRef.current = getEndDate(1, leftTimeRef.current);\n    setColoMareTime([getEndDate(1, coloMareTime[0]), getEndDate(1, coloMareTime[1])]);\n  }, [readyRef.current, leftTimeRef.current, coloMareTime]);\n\n  const handleClearButton = useCallback(() => {\n    const initTime = nowZeroDate();\n    setReadyCount(initTime);\n    setMareCount(initTime);\n    readyRef.current = new Date();\n    mareTimeRef.current = [0, 0];\n    setStartActivate(false);\n    setColoMareTime([initTime, initTime])\n    setMareId('0465');\n \n    if (readyCountDownRef.current !== null) clearInterval(readyCountDownRef.current);\n    readyCountDownRef.current = null;\n    if (mareCountDownRef.current !== null) clearInterval(mareCountDownRef.current);\n    mareCountDownRef.current = null;\n    \n    setStartButtonDisabled(false);\n    setOptButtonDisabled(true);\n    updateTriggers.clear();\n  }, []);\n\n  const handleNightmareButton = (e: React.MouseEvent<HTMLElement>) => {\n    if (startActivate === false) {\n      readyRef.current = new Date;\n      leftTimeRef.current = coloCount;\n      tick_tock(0);\n    }\n    setStartActivate(true);\n    if (!leftTimeRef.current) leftTimeRef.current = coloCount;\n\n    const mareButtonReady = !(e.currentTarget.dataset.ready) ? 0 : +(e.currentTarget.dataset.ready);\n    const mareReady = triggers.has('90s') ? 90 : \n                      triggers.has('5s') ? 5 :\n                      mareButtonReady;\n    const mareActivate = !(e.currentTarget.dataset.activate) ? 0 : +(e.currentTarget.dataset.activate);\n    mareTimeRef.current = [mareReady, mareActivate, mareButtonReady];\n\n    const mareStartDate = getEndDate(-1 - mareTimeRef.current[0], leftTimeRef.current);\n    const mareEndDate = getEndDate(-1 - mareTimeRef.current[0] - mareTimeRef.current[1], leftTimeRef.current);\n    setColoMareTime([mareStartDate, mareEndDate]);\n    const tempId = !(e.currentTarget.dataset.id) ? '0465' : e.currentTarget.dataset.id;\n    setMareId(tempId);\n    \n    if (readyCountDownRef.current !== null) clearInterval(readyCountDownRef.current);\n    readyCountDownRef.current = null;\n    if (mareCountDownRef.current !== null) clearInterval(mareCountDownRef.current);\n    mareCountDownRef.current = null;\n    readyCountDownRef.current = setInterval(ready_countdown.bind(undefined, false), 50);\n    mareCountDownRef.current = setInterval(mare_countdown, 50);\n    \n    setStartButtonDisabled(true);\n    setOptButtonDisabled(false);\n\n    const countText_now = getTimeText(getEndDate(-1, leftTimeRef.current));\n    const countText_ready = getTimeText(getEndDate(mareTimeRef.current[0] * -1 - 1, leftTimeRef.current));\n    const countText_end = getTimeText(getEndDate((mareTimeRef.current[0] + mareTimeRef.current[1]) * -1 - 1, leftTimeRef.current));\n\n    setHistory(history => [...history, {id: tempId, nowText: countText_now, readyText: countText_ready, endText: countText_end}]);\n  };\n\n  return(\n    <div tw='flex lg:w-4/5 lg:mx-auto w-full mx-0'>\n      <div tw='flex-grow flex flex-col'>\n        <TimerDisplayTable\n          coloCountText={getTimeText(coloCount).slice(0,8)}\n          coloMareStartTime={getTimeText(coloMareTime[0]).slice(0,8)}\n          coloMareEndTime={getTimeText(coloMareTime[1]).slice(0,8)}\n          coloMareId={mareId}\n          readyCountText={getTimeText(readyCount).slice(0,8)}\n          mareCountText={getTimeText(mareCount).slice(0,8)}\n          shinmaCountText={getTimeText(shinmaCount).slice(0,8)}\n          shinmaEndTime={getTimeText(shinmaEndTime).slice(0,8)}\n        />\n        <TimerSettingTable\n          triggers={triggers}\n          updateTriggers={updateTriggers}\n          optButtonDisabled={optButtonDisabled}\n          startButtonDisabled={startButtonDisabled}\n          handleShinmaButton={handleShinmaButton}\n          handleStartButton={handleStartButton}\n          handleRestartButton={handleRestartButton}\n          handleShorteningButton={handleShorteningButton}\n          handleMinusButton={handleMinusButton}\n          handleClearButton={handleClearButton}\n          handleNightmareButton={handleNightmareButton}\n        />\n      </div>\n      <div tw='md:w-max md:ml-6 md:block w-0 ml-0 hidden'>\n        <TimerHistoryTable\n          history={history}\n          setHistory={setHistory}\n        />\n      </div>\n    </div>\n  )\n};\n\nexport default ColoTimerTable;\n","import { css } from \"@emotion/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { AnyImage } from \"src/components\";\nimport tw from 'twin.macro';\n\nconst classes = {\n  timerDisplayTable: tw`\n    flex flex-col sm:w-1/3 w-full p-2\n  `,\n  timerTextLabel4: tw`\n    w-36 m-1 text-center font-bold border-b border-gray-400 transition ease-out\n  `,\n  timerTextLabel2: tw`\n    w-16 m-1 text-center font-bold border-b border-gray-400 transition ease-out\n  `,\n  timerDataLabel: tw`\n    w-40 m-1 text-center font-mono font-bold border-b border-gray-400 transition ease-out\n  `,\n  zoomTimerTextLabel4WithIcon: css`\n    transform: scale(0.4) translateY(-3.6rem) translateX(6.7rem);\n  `,\n  zoomTimerTextLabel2WithIcon: css`\n    transform: scale(0.4) translateY(-3.6rem) translateX(-2rem);\n  `,\n  zoomTimerDataLabelWithIcon: css`\n    transform: scale(1.3) translateX(-2rem);\n  `,\n  zoomTimerTextLabel4: css`\n    transform: scale(0.4) translateY(-3.6rem);\n  `,\n  zoomTimerDataLabel: css`\n    transform: scale(1.3) translateX(-4rem);\n  `\n};\n\nconst TimerDataLabel: React.FC = (props) => {\n  return <div css={classes.timerDataLabel} {...props}>{props.children}</div>;\n}\n\nconst TimerTextLabel2: React.FC = (props) => {\n  return <div css={classes.timerTextLabel2} {...props}>{props.children}</div>;\n}\n\nconst TimerTextLabel4: React.FC = (props) => {\n  return <div css={classes.timerTextLabel4} {...props}>{props.children}</div>;\n}\n\ninterface timerTableProps {\n  zoom: boolean;\n  coloCountText: string;\n  coloMareId: string;\n  coloMareStartTime: string;\n  coloMareEndTime: string;\n};\n\nconst TimerTable = React.memo((props: timerTableProps) => {\n  const { zoom, coloCountText, coloMareId, coloMareStartTime, coloMareEndTime } = props;\n  const imageId = ('0000' + coloMareId).slice(-4);\n\n  return(\n    <div css={classes.timerDisplayTable}>\n      <h6 tw='sm:block hidden dark:text-white'>コロシアム残り時間</h6>\n      <div tw='flex-grow flex items-center sm:items-start w-max mx-auto text-3xl'>\n        <div tw='w-36 mr-4 text-center block sm:hidden'>\n          <span>コロシアム<br />残り時間</span>\n        </div>\n        <div tw='flex flex-col'>\n          <div tw='flex flex-row'>\n            <TimerTextLabel4 css={zoom && classes.zoomTimerTextLabel4WithIcon}>全体時間</TimerTextLabel4>            \n            <TimerDataLabel css={zoom && classes.zoomTimerDataLabelWithIcon}>{coloCountText}</TimerDataLabel>\n          </div>\n          <div tw='flex'>\n            <div tw='w-20 h-20 my-1'>\n              <div data-id={coloMareId} />\n              <AnyImage filename={`cards/CardS${imageId}.png`} />\n            </div>\n            <div>\n              <div tw='flex' >\n                <TimerTextLabel2 css={zoom && classes.zoomTimerTextLabel2WithIcon}>発動</TimerTextLabel2>\n                <TimerDataLabel css={zoom && classes.zoomTimerDataLabelWithIcon}>{coloMareStartTime}</TimerDataLabel>\n              </div>\n              <div tw='flex'>\n                <TimerTextLabel2 css={zoom && classes.zoomTimerTextLabel2WithIcon}>終了</TimerTextLabel2>\n                <TimerDataLabel css={zoom && classes.zoomTimerDataLabelWithIcon}>{coloMareEndTime}</TimerDataLabel>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\ninterface mareTimerTableProps {\n  zoom: boolean;\n  readyCountText: string;\n  mareCountText: string;\n};\n\nconst MareTimerTable = React.memo((props: mareTimerTableProps) => {\n  const { zoom, readyCountText, mareCountText } = props;\n\n  return(\n    <div css={classes.timerDisplayTable}>\n      <h6 tw='sm:block hidden dark:text-white'>メアタイマー</h6>\n      <div tw='flex-grow flex items-center sm:items-start w-max mx-auto text-3xl'>\n        <div tw='w-36 mr-4 text-center block sm:hidden'>\n          <span>メア<br />タイマー</span>\n        </div>\n        <div tw='flex flex-col'>\n          <div tw='flex'>\n            <TimerTextLabel4 css={zoom && classes.zoomTimerTextLabel4}>発動時間</TimerTextLabel4>\n            <TimerDataLabel css={zoom && classes.zoomTimerDataLabel}>{readyCountText}</TimerDataLabel>\n          </div>\n          <div tw='flex'>\n            <TimerTextLabel4 css={zoom && classes.zoomTimerTextLabel4}>終了時間</TimerTextLabel4>\n            <TimerDataLabel css={zoom && classes.zoomTimerDataLabel}>{mareCountText}</TimerDataLabel>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\ninterface shinmaTimerTableProps {\n  zoom: boolean;\n  shinmaCountText: string;\n  shinmaEndTime: string;\n};\n\nconst ShinmaTimerTable = React.memo((props: shinmaTimerTableProps) => {\n  const { zoom, shinmaCountText, shinmaEndTime } = props;\n\n  return(\n    <div css={classes.timerDisplayTable}>\n      <h6 tw='hidden sm:block dark:text-white'>神魔タイマー</h6>\n      <div tw='flex-grow flex items-center sm:items-start w-max mx-auto text-3xl'>\n        <div tw='w-36 mr-4 text-center block sm:hidden'>\n          <span>神魔<br />タイマー</span>\n        </div>\n        <div tw='flex flex-col'>\n          <div tw='flex'>\n            <TimerTextLabel4 css={zoom && classes.zoomTimerTextLabel4}>残り時間</TimerTextLabel4>\n            <TimerDataLabel css={zoom && classes.zoomTimerDataLabel}>{shinmaCountText}</TimerDataLabel>\n          </div>\n          <div tw='flex'>\n            <TimerTextLabel4 css={zoom && classes.zoomTimerTextLabel4}>終了時刻</TimerTextLabel4>\n            <TimerDataLabel css={zoom && classes.zoomTimerDataLabel}>{shinmaEndTime}</TimerDataLabel>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\ninterface timerDisplayTableProps {\n  coloCountText: string;\n  coloMareStartTime: string;\n  coloMareEndTime: string;\n  coloMareId: string;\n  readyCountText: string;\n  mareCountText: string;\n  shinmaCountText: string;\n  shinmaEndTime: string;\n}\n\nconst TimerDisplayTable = (props: timerDisplayTableProps) => {\n  const { coloCountText, coloMareStartTime, coloMareEndTime, coloMareId, readyCountText, mareCountText, shinmaCountText, shinmaEndTime } = props;\n  const [zoom, setZoom] = useState<boolean>(false);\n\n  useEffect(() => {\n    setZoom(localStorage.getItem(`timerZoom`) === `in`);\n  }, []);\n\n  const handleZoomButton = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      localStorage.setItem(`timerZoom`, `in`);\n      setZoom(true);\n    } else {\n      localStorage.setItem(`timerZoom`, `out`);\n      setZoom(false);\n    }\n  };\n\n  return (\n    <div tw='flex flex-wrap relative'>\n      <div tw='absolute top-0 right-4'>\n        <input\n          type='checkbox'\n          id='zoomButton'\n          tw='absolute appearance-none'\n          onChange={(e) => handleZoomButton(e)}\n        />\n        <label\n          htmlFor='zoomButton'\n          tw='inline-block w-12 h-10 cursor-pointer rounded transition ease px-2 py-1 bg-transb-16 hover:bg-transb-24 dark:(bg-transw-24 hover:bg-transw-16)'\n        >\n          {zoom\n            ?\n            <svg tw='w-8 h-8' xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM13 10H7\" />\n            </svg>\n            :\n            <svg tw='w-8 h-8' xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7\" />\n            </svg>\n          }\n        </label>\n      </div>\n      <TimerTable\n        zoom={zoom}\n        coloCountText={coloCountText}\n        coloMareStartTime={coloMareStartTime}\n        coloMareEndTime={coloMareEndTime}\n        coloMareId={coloMareId}\n      />\n      <MareTimerTable\n        zoom={zoom}\n        readyCountText={readyCountText}\n        mareCountText={mareCountText}\n      />\n      <ShinmaTimerTable\n        zoom={zoom}\n        shinmaCountText={shinmaCountText}\n        shinmaEndTime={shinmaEndTime}\n      />\n    </div>\n  );\n};\n\nexport default TimerDisplayTable;\n","module.exports = __webpack_public_path__ + \"static/warning1-066edbab5ef950bc88ed83dcb20e9f31.mp3\";","module.exports = \"data:audio/mpeg;base64,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IU2qmzayyLru9bEqwRiCPp0fQmT5JUnQlFMKRUWUxk2e0XeyuSqTr3aSR7aFXdo4f/b//+lsrrATfr4BmkAA0SNDs0zUwHh4GBYOGRCAIDlO0AxIwE0ugSJRi2ngLcoCFKprNFcHU1xbQYuEU45LpsBYuJVkU0T0LKyJcUnENIpocltytki6SIkj3fa/Cg9HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dP//uSRIaJkzciRNNvYlBUJChmbelKAAABnAAAAAAAADOAAAAAR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0dPR09HT0FQRVRBR0VY0AcAAEAAAAABAAAAAAAAoAAAAAAAAAAACwAAAAAAAABNUDNHQUlOX1VORE8AKzAwNCwrMDA0LE5BUEVUQUdFWNAHAABAAAAAAQAAAAAAAIAAAAAAAAAAAA==\""],"sourceRoot":""}