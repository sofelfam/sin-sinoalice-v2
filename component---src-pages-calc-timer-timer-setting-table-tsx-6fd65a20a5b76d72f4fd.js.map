{"version":3,"sources":["webpack:///./src/pages/calc/timer/timerSetting-table.tsx"],"names":["TriggerComponent","triggers","props","updateTriggers","toggleCheck","value","type","id","onChange","e","checked","filename","htmlFor","TimerSettingTable","optButtonDisabled","startButtonDisabled","handleShinmaButton","handleStartButton","handleRestartButton","handleShorteningButton","handleMinusButton","handleClearButton","handleNightmareButton","useState","snackPack","setSnackPack","snackbarOpen","setSnackbarOpen","messageInfo","setMessageInfo","useEffect","prev","handleSnackbarOpen","message","severity","key","Date","getTime","onClick","disabled","aria-label"],"mappings":"s6HAQMA,EAAmB,UAAW,YAA0E,IACpGC,EAA6BC,EADuE,SAC1FC,EAAmBD,EADuE,eAEtGE,EAAc,SAACC,GACnB,OAAQJ,GAAY,IAAb,SAAP,IAGF,OACE,0BACE,0BACE,0BACE,qBACEK,KADF,WAEEC,GAFF,aAGEF,MAHF,WAOEG,SAAU,mBAAOL,SAAsBM,SAA7B,QACVC,QAASN,EAAY,QAEvB,0BACE,iBAAUO,SAAS,0BAGvB,0BACE,qBACEL,KADF,WAEEC,GAFF,cAGEF,MAHF,YAOEG,SAAU,mBAAOL,SAAsBM,SAA7B,QACVC,QAASN,EAAY,SAEvB,0BACE,iBAAUO,SAAS,2BAIzB,0BACE,qBACEC,QADF,oBADF,SAOE,qBACEA,QADF,qBAzCN,Y,8vPAkEIC,EAAoB,UAAW,YAAmC,IAE9DZ,EAAsNC,EAFxJ,SAEpDC,EAA4MD,EAFxJ,eAEpCY,EAA4LZ,EAFxJ,kBAEjBa,EAAyKb,EAFxJ,oBAEIc,EAAoJd,EAFxJ,mBAEwBe,EAAgIf,EAFxJ,kBAE2CgB,EAA6GhB,EAFxJ,oBAEgEiB,EAAwFjB,EAFxJ,uBAEwFkB,EAAgElB,EAFxJ,kBAE2GmB,EAA6CnB,EAFxJ,kBAE8HoB,EAA0BpB,EAFxJ,wBAWpCqB,mBAXoC,IAW/DC,EAX+D,KAWpDC,EAXoD,OAY9BF,oBAZ8B,GAY/DG,EAZ+D,KAYjDC,EAZiD,OAahCJ,wBAbgC,GAa/DK,EAb+D,KAalDC,EAbkD,KAetEC,qBAAU,WACJN,WAAJ,GAEEK,E,yWAAe,CAAD,GAAML,EAApBK,KACAJ,GAAa,mBAAUM,QAAV,MACbJ,OACSH,aAAJ,GAELG,QAED,CAACH,EAAWI,EAVfE,IAYA,IAAME,EAAqB,SAACC,EAAD,GAEzBR,GAAa,4CAAoB,CAAEQ,QAAF,EAAWC,SAAX,EAAqBC,KAAK,IAAIC,MAAOC,iBAwCxE,OACE,0BACE,yBADF,UAEE,uBACE,0BACE,eAAkBpC,SAAlB,EAAsCE,eAAgBA,IACtD,uBACE,4BAEEmC,QAAS,kBAjCnBtB,SACAgB,EAAmB,cAAnBA,UA0BE,YAYE,0BACE,4BAEEM,QAAS,kBAAMrB,KACfsB,SAAUxB,GAhBhB,YAqBE,uBACE,0BACE,0BACE,0BACE,4BAEER,GAFF,cAGEiC,aAHF,KAIEF,QAAS,kBAnDvBpB,SACAc,EAAmB,iBAAnBA,SAmDcO,SAAUzB,GAEV,0BACE,iBAAUH,SAAS,0BAGvB,qBACEC,QADF,qBAbJ,SAoBE,0BACE,4BAEEL,GAFF,iBAGEiC,aAHF,KAIEF,QAAS,kBAjEvBnB,SACAa,EAAmB,kBAAnBA,SAiEcO,SAAUzB,GAEV,0BACE,iBAAUH,SAAS,0BAGvB,qBACEC,QADF,wBAhCJ,QAuCE,0BACE,4BAEEL,GAFF,YAGEiC,aAHF,MAIEF,QAAS,kBA/EvBlB,SACAY,EAAmB,WAAnBA,YA+EcO,SAAUzB,GAEV,2BARJ,OAUE,qBACEF,QADF,mBAlDN,SA0DE,4BAEE0B,QAAS,kBAzFnBjB,SACAW,EAAmB,WAAnBA,aA0FU,gBAJF,MAKE,2BArFR,UAyFE,uBACE,uBAAeV,sBAAuBA,UAOhD","file":"component---src-pages-calc-timer-timer-setting-table-tsx-6fd65a20a5b76d72f4fd.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport 'twin.macro';\nimport { AnyImage } from \"src/components\";\nimport { Trash } from \"src/components/icons\";\nimport NightmareTabs from \"./nightmare-tabs\";\nimport { Functions } from \"src/hooks/use-set\";\n\n//何故か効かない\nconst TriggerComponent = React.memo((props: { triggers: Set<string>; updateTriggers: Functions<string>; }) => {  \n  const { triggers, updateTriggers } = props;\n  const toggleCheck = (value: string):boolean => {\n    return (triggers || new Set()).has(value);\n  }\n\n  return (\n    <div tw='flex flex-col m-1'>\n      <div tw='inline-flex flex-row mb-1'>\n        <div tw='relative h-16 rounded-l-md overflow-hidden'>\n          <input\n            type='checkbox'\n            id='trigger-5s'\n            value='5s'\n            tw='w-16 h-16 box-border appearance-none cursor-pointer transition ease focus:outline-none focus-visible:ring border border-gray-400\n              hover:bg-focus checked:bg-disabled dark:checked:bg-darkhover\n              rounded-l-md'\n            onChange={(e) => updateTriggers.toggle(e.target.value)}\n            checked={toggleCheck('5s')}\n          />\n          <div tw='absolute left-0 top-0 w-full h-full -z-1 transform scale-110'>\n            <AnyImage filename='cards/CardS5975.png' />\n          </div>\n        </div>\n        <div tw='relative h-16 rounded-r-md overflow-hidden'>\n          <input\n            type='checkbox'\n            id='trigger-90s'\n            value='90s'\n            tw='w-16 h-16 box-border appearance-none cursor-pointer transition ease focus:outline-none focus-visible:ring border border-gray-400\n              hover:bg-focus checked:bg-disabled dark:checked:bg-darkhover\n              rounded-r-md border-l-0'\n            onChange={(e) => updateTriggers.toggle(e.target.value)}\n            checked={toggleCheck('90s')}\n          />\n          <div tw='absolute left-0 top-0 w-full h-full -z-1 transform scale-110'>\n            <AnyImage filename='cards/CardS7549.png' />\n          </div>\n        </div>\n      </div>\n      <div tw='inline-flex'>\n        <label\n          htmlFor='trigger-5s'\n          tw='w-16 text-sm text-center cursor-pointer overflow-hidden'\n        >\n          3rdユノ\n        </label>\n        <label\n          htmlFor='trigger-90s'\n          tw='w-16 text-sm text-center cursor-pointer overflow-hidden'\n        >\n          サルト\n        </label>\n      </div>\n    </div>\n  );\n});\n\ninterface timerSettingTableProps {\n  triggers: Set<string>;\n  updateTriggers: Functions<string>;\n  optButtonDisabled: boolean;\n  startButtonDisabled: boolean;\n  handleShinmaButton: () => void;\n  handleStartButton: () => void;\n  handleRestartButton: () => void;\n  handleShorteningButton: () => void;\n  handleMinusButton: () => void;\n  handleClearButton: () => void;\n  handleNightmareButton: (e: React.MouseEvent<HTMLElement>) => void;\n};\n\nconst TimerSettingTable = React.memo((props: timerSettingTableProps) => {\n  //console.log('setting rendered');\n  const { triggers, updateTriggers, optButtonDisabled, startButtonDisabled, handleShinmaButton, handleStartButton, handleRestartButton, handleShorteningButton, handleMinusButton, handleClearButton, handleNightmareButton } = props;\n\n  //ボタントリガーアラート\n  interface SnackbarMessage {\n    message: string;\n    severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n    key: number;\n  }\n  \n  const [snackPack, setSnackPack] = useState<SnackbarMessage[]>([]);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [messageInfo, setMessageInfo] = useState<SnackbarMessage | undefined>(undefined);\n\n  useEffect(() => {\n    if (snackPack.length && !messageInfo) {\n      // Set a new snack when we don't have an active one\n      setMessageInfo({ ...snackPack[0] });\n      setSnackPack((prev) => prev.slice(1));\n      setSnackbarOpen(true);\n    } else if (snackPack.length && messageInfo && snackbarOpen) {\n      // Close an active snack when a new one is added\n      setSnackbarOpen(false);\n    }\n  }, [snackPack, messageInfo, snackbarOpen]);\n\n  const handleSnackbarOpen = (message: string, severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined) => {\n    //setSnackbarOpen(true);\n    setSnackPack((prev) => [...prev, { message, severity, key: new Date().getTime() }]);\n  }\n\n  const handleSnackbarClose = (reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n\n  const handleExited = () => {\n    setMessageInfo(undefined);\n  };\n\n\n  const handleShinmaButtonWithSnack = () => {\n    handleShinmaButton();\n    handleSnackbarOpen(\"神魔効果タイマー開始。\", \"info\");\n  }\n\n  const handleRestartButtonWithSnack = () => {\n    handleRestartButton();\n    handleSnackbarOpen(\"[逆刻] 起動メア巻き戻し。\", \"info\");\n  }\n\n  const handleShorteningButtonWithSnack = () => {\n    handleShorteningButton();\n    handleSnackbarOpen(\"[順刻] 起動メア60秒減少。\", \"info\");\n  }\n\n  const handleMinusButtonWithSnack = () => {\n    handleMinusButton();\n    handleSnackbarOpen(\"-1秒しました。\", \"success\");\n  }\n\n  const handleClearButtonWithSnack = () => {\n    handleClearButton();\n    handleSnackbarOpen(\"クリアしました。\", \"success\");\n  }\n\n  return(\n    <div tw='p-2'>\n      <h6 tw='dark:text-white'>タイマー設定</h6>\n      <div>\n        <div tw='flex flex-row justify-between items-center px-4 lg:px-20'>\n          <TriggerComponent triggers={triggers} updateTriggers={updateTriggers} />\n          <div>\n            <button\n              tw='text-2xl bg-blue-600 text-white rounded-lg py-2 px-4 transition ease select-none hover:bg-blue-800 disabled:bg-gray-400 focus:outline-none focus-visible:ring'\n              onClick={() => handleShinmaButtonWithSnack()}\n            >\n              神魔効果開始\n            </button>\n          </div>\n        </div>\n        <div tw='w-full px-2'>\n          <button\n            tw='w-full text-4xl bg-lightblue-500 text-white rounded-2xl p-6 transition ease select-none hover:bg-lightblue-700 disabled:bg-gray-400 focus:outline-none focus-visible:ring'\n            onClick={() => handleStartButton()}\n            disabled={startButtonDisabled}\n          >\n            ナイトメア準備\n          </button>\n        </div>\n        <div>\n          <div tw='flex justify-between p-2 lg:px-16'>\n            <div tw='flex'>\n              <div tw='flex flex-col'>\n                <button\n                  tw='relative w-16 h-16 items-center rounded-full p-1 sm:px-4 sm:py-2 ml-1 sm:m-2 transition ease select-none hover:bg-focus active:bg-active disabled:bg-disabled focus:outline-none focus-visible:ring overflow-hidden'\n                  id='res-restart'\n                  aria-label='逆刻'\n                  onClick={() => handleRestartButtonWithSnack()}\n                  disabled={optButtonDisabled}\n                >\n                  <div tw='absolute -top-2 -left-2 w-20 h-20 -z-1'>\n                    <AnyImage filename='cards/CardS6416.png' />\n                  </div>\n                </button>\n                <label\n                  htmlFor='res-restart'\n                  tw='w-full text-sm text-center cursor-pointer overflow-hidden'\n                >\n                  ロボンゴ\n                </label>\n              </div>\n              <div tw='flex flex-col'>\n                <button\n                  tw='relative w-16 h-16 items-center rounded-full p-1 sm:px-4 sm:py-2 ml-1 sm:m-2 transition ease select-none hover:bg-focus active:bg-active disabled:bg-disabled focus:outline-none focus-visible:ring overflow-hidden'\n                  id='res-shortening'\n                  aria-label='順刻'\n                  onClick={() => handleShorteningButtonWithSnack()}\n                  disabled={optButtonDisabled}\n                >\n                  <div tw='absolute -top-2 -left-2 w-20 h-20 -z-1'>\n                    <AnyImage filename='cards/CardS2672.png' />\n                  </div>\n                </button>\n                <label\n                  htmlFor='res-shortening'\n                  tw='w-full text-sm text-center cursor-pointer overflow-hidden'\n                >\n                  ガリア\n                </label>\n              </div>\n              <div tw='flex flex-col'>\n                <button\n                  tw='w-16 h-16 items-center bg-emerald-500 text-white rounded-full px-2 py-1 sm:px-4 sm:py-2 ml-1 sm:m-2 transition ease select-none hover:bg-emerald-700 disabled:bg-gray-400 focus:outline-none focus-visible:ring'\n                  id='res-minus'\n                  aria-label='-1秒'\n                  onClick={() => handleMinusButtonWithSnack()}\n                  disabled={optButtonDisabled}\n                >\n                  <span tw='block text-center'>-1</span>\n                </button>\n                <label\n                  htmlFor='res-minus'\n                  tw='w-full text-sm text-center cursor-pointer overflow-hidden'\n                >\n                  微調整\n                </label>\n              </div>\n            </div>\n            <button\n              tw='flex h-16 items-center bg-rose-600 text-white rounded-md px-4 py-1 sm:px-4 sm:py-2 sm:m-2 transition ease select-none hover:bg-rose-800 focus:outline-none focus-visible:ring'\n              onClick={() => handleClearButtonWithSnack()}\n            >\n              <Trash />\n              <span tw='sm:block hidden'>クリア</span>\n            </button>\n          </div>\n        </div>\n        <div>\n          <NightmareTabs handleNightmareButton={handleNightmareButton} />\n        </div>\n      </div>\n    </div>\n  );\n});\n  \nexport default TimerSettingTable;\n"],"sourceRoot":""}